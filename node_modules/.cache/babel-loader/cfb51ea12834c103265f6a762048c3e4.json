{"ast":null,"code":"import React from 'react';\nimport { addMessageActionCreator, UpdateMessagePostActionCreator } from \"../../redux/message-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport { connect } from \"react-redux\";\nimport { withAuthRedirect } from \"../../hoc/AuthRedirect\"; // const DialogItem = (props) => {\n//     console.log(props)\n//     let path = '/dialogs/' + props.id;\n//     return (\n//         <NavLink to={path} className={s.dialog} activeClassName={s.active}>{props.name}</NavLink>\n//     )\n// }\n//\n// const Message = (props) => {\n//     return (\n//         <div className=\"message\">{props.message}</div>\n//     )\n// }\n// const DialogsContainer = (props) => {\n//     console.log(props)\n//     let state = props.store.getState()\n//     let newMessageElement = React.createRef()\n//     const addMessage = () => {\n//         props.store.dispatch(addMessageActionCreator())\n//     }\n//     let onMessageChange = (text) => {\n//\n//\n//         props.store.dispatch(UpdateMessagePostActionCreator(text))\n//     }\n//     return ( <Dialogs addMessage={addMessage} onMessageChange={onMessageChange} message={state.messagePage.messagesList} dialogs={state.messagePage.names} textMessage={state.messagePage.textMessage} />\n//\n//     )\n// }\n\nlet mapStateToProps = state => {\n  return {\n    dialogs: state.messagePage.names,\n    textMessage: state.messagePage.textMessage,\n    message: state.messagePage.messagesList,\n    isAuth: state.auth.isAuth\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    onMessageChange: text => {\n      dispatch(UpdateMessagePostActionCreator(text));\n    },\n    addMessage: () => {\n      dispatch(addMessageActionCreator());\n    }\n  };\n};\n\nlet AuthRedirectComponent = withAuthRedirect(Dialogs);\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\nexport default DialogsContainer;","map":{"version":3,"sources":["C:/Users/Katerina/PhpstormProjects/react-practice/src/components/Dialogs/DialogsContainer.js"],"names":["React","addMessageActionCreator","UpdateMessagePostActionCreator","Dialogs","connect","withAuthRedirect","mapStateToProps","state","dialogs","messagePage","names","textMessage","message","messagesList","isAuth","auth","mapDispatchToProps","dispatch","onMessageChange","text","addMessage","AuthRedirectComponent","DialogsContainer"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAQC,uBAAR,EAAiCC,8BAAjC,QAAsE,6BAAtE;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,gBAAR,QAA+B,wBAA/B,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHC,IAAAA,OAAO,EAAED,KAAK,CAACE,WAAN,CAAkBC,KADxB;AAEHC,IAAAA,WAAW,EAAEJ,KAAK,CAACE,WAAN,CAAkBE,WAF5B;AAGHC,IAAAA,OAAO,EAAEL,KAAK,CAACE,WAAN,CAAkBI,YAHxB;AAIHC,IAAAA,MAAM,EAAEP,KAAK,CAACQ,IAAN,CAAWD;AAJhB,GAAP;AAMH,CAPD;;AAQA,IAAIE,kBAAkB,GAAIC,QAAD,IAAc;AACnC,SAAO;AACHC,IAAAA,eAAe,EAAGC,IAAD,IAAU;AACvBF,MAAAA,QAAQ,CAACf,8BAA8B,CAACiB,IAAD,CAA/B,CAAR;AACH,KAHE;AAIHC,IAAAA,UAAU,EAAE,MAAM;AAClBH,MAAAA,QAAQ,CAAChB,uBAAuB,EAAxB,CAAR;AACC;AANE,GAAP;AAQH,CATD;;AAUA,IAAIoB,qBAAqB,GAAGhB,gBAAgB,CAACF,OAAD,CAA5C;AACA,MAAMmB,gBAAgB,GAAGlB,OAAO,CAACE,eAAD,EAAkBU,kBAAlB,CAAP,CAA6Cb,OAA7C,CAAzB;AAEA,eAAemB,gBAAf","sourcesContent":["import React from 'react';\r\n\r\nimport {addMessageActionCreator, UpdateMessagePostActionCreator} from \"../../redux/message-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/AuthRedirect\";\r\n\r\n\r\n\r\n// const DialogItem = (props) => {\r\n//     console.log(props)\r\n//     let path = '/dialogs/' + props.id;\r\n//     return (\r\n//         <NavLink to={path} className={s.dialog} activeClassName={s.active}>{props.name}</NavLink>\r\n//     )\r\n// }\r\n//\r\n// const Message = (props) => {\r\n//     return (\r\n//         <div className=\"message\">{props.message}</div>\r\n//     )\r\n// }\r\n// const DialogsContainer = (props) => {\r\n//     console.log(props)\r\n//     let state = props.store.getState()\r\n//     let newMessageElement = React.createRef()\r\n//     const addMessage = () => {\r\n//         props.store.dispatch(addMessageActionCreator())\r\n//     }\r\n//     let onMessageChange = (text) => {\r\n//\r\n//\r\n//         props.store.dispatch(UpdateMessagePostActionCreator(text))\r\n//     }\r\n//     return ( <Dialogs addMessage={addMessage} onMessageChange={onMessageChange} message={state.messagePage.messagesList} dialogs={state.messagePage.names} textMessage={state.messagePage.textMessage} />\r\n//\r\n//     )\r\n// }\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.messagePage.names,\r\n        textMessage: state.messagePage.textMessage,\r\n        message: state.messagePage.messagesList,\r\n        isAuth: state.auth.isAuth\r\n    };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onMessageChange: (text) => {\r\n            dispatch(UpdateMessagePostActionCreator(text))\r\n        },\r\n        addMessage: () => {\r\n        dispatch(addMessageActionCreator())\r\n        }\r\n    }\r\n}\r\nlet AuthRedirectComponent = withAuthRedirect(Dialogs)\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)\r\n\r\nexport default DialogsContainer\r\n"]},"metadata":{},"sourceType":"module"}