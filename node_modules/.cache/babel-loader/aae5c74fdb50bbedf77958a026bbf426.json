{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Katerina\\\\PhpstormProjects\\\\react-practice\\\\src\\\\components\\\\Profile\\\\MyPosts\\\\MyPostsContaner.js\";\nimport React from \"react\";\nimport MyPost from './MyPost/MyPost';\nimport { addPostActionCreator, UpdateNewPostActionCreator } from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\n\nconst MyPostsContainer = props => {\n  console.log(props);\n  let arr_post = props.posts.map((el, i) => React.createElement(MyPost, {\n    massage: el.massage,\n    id: i + 1,\n    like: el.like,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }));\n  let newPostElement = React.createRef();\n\n  const addPost = () => {\n    let id = props.posts.length + 1;\n    props.dispatch(addPostActionCreator(id));\n  };\n\n  const onPostChange = () => {\n    props.dispatch(UpdateNewPostActionCreator(text));\n  };\n\n  return React.createElement(MyPosts, {\n    updateNewPostText: onPostChange,\n    addPostText: addPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  });\n};\n\nexport default MyPostsContainer;","map":{"version":3,"sources":["C:/Users/Katerina/PhpstormProjects/react-practice/src/components/Profile/MyPosts/MyPostsContaner.js"],"names":["React","MyPost","addPostActionCreator","UpdateNewPostActionCreator","MyPosts","MyPostsContainer","props","console","log","arr_post","posts","map","el","i","massage","like","newPostElement","createRef","addPost","id","length","dispatch","onPostChange","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAAQC,oBAAR,EAA8BC,0BAA9B,QAA+D,gCAA/D;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAGA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,MAAIG,QAAQ,GAAGH,KAAK,CAACI,KAAN,CAAYC,GAAZ,CAAgB,CAACC,EAAD,EAAKC,CAAL,KAAW,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAED,EAAE,CAACE,OAApB;AAA6B,IAAA,EAAE,EAAED,CAAC,GAAC,CAAnC;AAAsC,IAAA,IAAI,EAAED,EAAE,CAACG,IAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA3B,CAAf;AACA,MAAIC,cAAc,GAAGhB,KAAK,CAACiB,SAAN,EAArB;;AACA,QAAMC,OAAO,GAAG,MAAM;AAClB,QAAIC,EAAE,GAAGb,KAAK,CAACI,KAAN,CAAYU,MAAZ,GAAmB,CAA5B;AAEAd,IAAAA,KAAK,CAACe,QAAN,CAAenB,oBAAoB,CAACiB,EAAD,CAAnC;AACH,GAJD;;AAKA,QAAMG,YAAY,GAAG,MAAM;AAEvBhB,IAAAA,KAAK,CAACe,QAAN,CAAelB,0BAA0B,CAACoB,IAAD,CAAzC;AAEH,GAJD;;AAKA,SAAQ,oBAAC,OAAD;AAAS,IAAA,iBAAiB,EAAGD,YAA7B;AAA4C,IAAA,WAAW,EAAEJ,OAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAR;AAEH,CAhBD;;AAiBA,eAAeb,gBAAf","sourcesContent":["import React from \"react\";\r\n\r\nimport MyPost from './MyPost/MyPost'\r\nimport {addPostActionCreator, UpdateNewPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\n\r\nconst MyPostsContainer = (props) => {\r\n    console.log(props)\r\n    let arr_post = props.posts.map((el, i) => <MyPost massage={el.massage} id={i+1} like={el.like}/>);\r\n    let newPostElement = React.createRef()\r\n    const addPost = () => {\r\n        let id = props.posts.length+1;\r\n\r\n        props.dispatch(addPostActionCreator(id))\r\n    }\r\n    const onPostChange = () => {\r\n\r\n        props.dispatch(UpdateNewPostActionCreator(text) )\r\n\r\n    }\r\n    return (<MyPosts updateNewPostText={ onPostChange } addPostText={addPost} />)\r\n\r\n}\r\nexport default MyPostsContainer"]},"metadata":{},"sourceType":"module"}