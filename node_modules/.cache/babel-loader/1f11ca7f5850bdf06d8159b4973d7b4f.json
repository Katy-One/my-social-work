{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Katerina\\\\PhpstormProjects\\\\react-practice\\\\src\\\\components\\\\Dialogs\\\\Dialogs.js\";\nimport React, { useState } from 'react';\nimport s from './Dialogs.module.css';\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport { addMessageActionCreator, UpdateMessagePostActionCreator } from \"../../redux/message-reducer\";\nimport { Field, reduxForm } from 'redux-form';\nimport { TextArea } from \"../common/FormControls/FormControls\";\nimport { maxLength10, required } from \"../../utils/validator/validator\";\n\nconst DialogsForm = props => {\n  const {\n    handleSubmit,\n    load,\n    pristine,\n    reset,\n    submitting\n  } = props;\n  return React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Field, {\n    placeholder: 'post text',\n    name: 'post_text',\n    component: TextArea,\n    validate: [required, maxLength10],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    disabled: props.pristine || props.submitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Add post\"));\n};\n\nconst ReduxDialogsForm = reduxForm({\n  // a unique name for the form\n  form: 'login'\n})(DialogsForm);\n\nconst DialogItem = props => {\n  const UserMessage = e => {\n    e.preventDefault();\n    alert('lll'); //setState(true)\n  };\n\n  console.log(props);\n  let path = '/dialogs/' + props.id;\n  return React.createElement(NavLink, {\n    to: path,\n    onClick: () => {\n      UserMessage();\n    },\n    className: s.dialog,\n    activeClassName: s.active,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, props.name);\n};\n\nconst Message = props => {\n  return React.createElement(\"div\", {\n    className: \"message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, props.message);\n};\n\nconst Dialogs = props => {\n  console.log(props);\n  let [state, setState] = useState(false);\n\n  let addSubmit = value => {\n    props.addMessageActionCreator(value.post_text);\n  };\n\n  return React.createElement(\"div\", {\n    className: s.dialogs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, state ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(ReduxDialogsForm, {\n    onSubmit: addSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, props.message.map((el, i) => React.createElement(Message, {\n    message: el.message,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })))) : React.createElement(\"div\", {\n    className: s.dialogsItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, props.dialogs.map((el, i) => React.createElement(DialogItem, {\n    name: el.name,\n    id: el.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }))));\n};\n\nexport default Dialogs;","map":{"version":3,"sources":["C:/Users/Katerina/PhpstormProjects/react-practice/src/components/Dialogs/Dialogs.js"],"names":["React","useState","s","NavLink","Redirect","addMessageActionCreator","UpdateMessagePostActionCreator","Field","reduxForm","TextArea","maxLength10","required","DialogsForm","props","handleSubmit","load","pristine","reset","submitting","ReduxDialogsForm","form","DialogItem","UserMessage","e","preventDefault","alert","console","log","path","id","dialog","active","name","Message","message","Dialogs","state","setState","addSubmit","value","post_text","dialogs","map","el","i","dialogsItem"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {addMessageActionCreator, UpdateMessagePostActionCreator} from \"../../redux/message-reducer\";\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {TextArea} from \"../common/FormControls/FormControls\";\r\nimport {maxLength10, required} from \"../../utils/validator/validator\";\r\n\r\n\r\nconst DialogsForm = (props) => {\r\n    const {handleSubmit, load, pristine, reset, submitting} = props\r\n    return (\r\n\r\n        <form onSubmit={props.handleSubmit}>\r\n\r\n\r\n            <div>\r\n                <Field placeholder={'post text'} name={'post_text'} component={TextArea}\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n\r\n\r\n            <button disabled={props.pristine || props.submitting}>Add post</button>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst ReduxDialogsForm = reduxForm({\r\n    // a unique name for the form\r\n    form: 'login'\r\n})(DialogsForm)\r\n\r\nconst DialogItem = (props) => {\r\n    const UserMessage = (e) => {\r\n        e.preventDefault()\r\n        alert('lll')\r\n        //setState(true)\r\n    }\r\n    console.log(props)\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <NavLink to={path} onClick={()=>{UserMessage()}} className={s.dialog} activeClassName={s.active}>{props.name}</NavLink>\r\n\r\n    )\r\n}\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className=\"message\">{props.message}</div>\r\n    )\r\n}\r\nconst Dialogs = (props) => {\r\n    console.log(props)\r\n    let [state, setState] = useState(false)\r\n    let addSubmit = (value) => {\r\n\r\n        props.addMessageActionCreator(value.post_text)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            {state ?\r\n                <div>\r\n                    <ReduxDialogsForm onSubmit={addSubmit}/>\r\n                    <div>\r\n                        {props.message.map((el, i) =>\r\n                            <Message message={el.message}/>\r\n                        )}\r\n                    </div>\r\n                </div> :\r\n                <div className={s.dialogsItem}>\r\n                    {props.dialogs.map((el, i) =>\r\n                        <DialogItem  name={el.name} id={el.id}/>\r\n                    )}\r\n                </div>\r\n\r\n            }\r\n            {/*<button >ggg</button>*/}\r\n\r\n\r\n        </div>)\r\n}\r\n\r\n\r\nexport default Dialogs\r\n"]},"metadata":{},"sourceType":"module"}