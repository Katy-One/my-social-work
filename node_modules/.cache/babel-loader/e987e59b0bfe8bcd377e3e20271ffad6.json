{"ast":null,"code":"import { ProfileAPI, UserAPI } from \"../api/api\";\nlet updateNewTextPost = 'updateNewTextPost';\nlet addpost = 'ADD-POST';\nlet SET_USER_PROFILE = 'SET_USER_PROFILE';\nlet SET_STATUS = 'SET_STATUS';\nlet initialState = {\n  postInfo: [{\n    id: 1,\n    massage: 'post1',\n    like: 12\n  }, {\n    id: 2,\n    massage: 'post2',\n    like: 20\n  }, {\n    id: 3,\n    massage: 'post3',\n    like: 1\n  }],\n  newPostText: '',\n  profile: null,\n  status: ''\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case addpost:\n      let newPost = {\n        id: action.id,\n        massage: state.newPostText,\n        like: 0\n      };\n      return { ...state,\n        postInfo: [...state.postInfo, newPost],\n        newPostText: ''\n      };\n\n    case updateNewTextPost:\n      debugger;\n      return { ...state,\n        newPostText: action.nextText\n      };\n\n    case SET_USER_PROFILE:\n      return { ...state,\n        profile: action.profile\n      };\n\n    case SET_STATUS:\n      return { ...state,\n        status: action.status\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostText = id => {\n  return {\n    type: addpost,\n    id: id\n  };\n};\nexport const setStatusProfile = status => {\n  return {\n    type: SET_STATUS,\n    status: status\n  };\n};\nexport const updateNewPostText = text => {\n  return {\n    type: updateNewTextPost,\n    nextText: text\n  };\n};\nexport const setUsersProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const getUsersProfile = userId => {\n  return dispatch => {\n    UserAPI.getProfile(userId).then(response => {\n      dispatch(setUsersProfile(response.data));\n    });\n  };\n};\nexport const getStatus = userId => {\n  return dispatch => {\n    ProfileAPI.getStatus(userId).then(response => {\n      dispatch(setStatusProfile(response.data));\n    });\n  };\n};\nexport const updateStatus = status => {\n  return dispatch => {\n    ProfileAPI.setStatus(status).then(response => {\n      if (response.data.resultCode === 0) {\n        dispatch(setStatusProfile(status));\n      }\n    });\n  };\n};\nexport default profileReducer;","map":{"version":3,"sources":["C:/Users/Katerina/PhpstormProjects/react-practice/src/redux/profile-reducer.js"],"names":["ProfileAPI","UserAPI","updateNewTextPost","addpost","SET_USER_PROFILE","SET_STATUS","initialState","postInfo","id","massage","like","newPostText","profile","status","profileReducer","state","action","type","newPost","nextText","addPostText","setStatusProfile","updateNewPostText","text","setUsersProfile","getUsersProfile","userId","dispatch","getProfile","then","response","data","getStatus","updateStatus","setStatus","resultCode"],"mappings":"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","sourcesContent":["import {ProfileAPI, UserAPI} from \"../api/api\";\r\n\r\nlet updateNewTextPost = 'updateNewTextPost';\r\nlet addpost = 'ADD-POST';\r\nlet SET_USER_PROFILE = 'SET_USER_PROFILE'\r\nlet SET_STATUS = 'SET_STATUS'\r\nlet initialState = {\r\n    postInfo: [\r\n        {\r\n            id: 1,\r\n            massage: 'post1',\r\n            like: 12\r\n        },\r\n        {\r\n            id: 2,\r\n            massage: 'post2',\r\n            like: 20\r\n        },\r\n        {\r\n            id: 3,\r\n            massage: 'post3',\r\n            like: 1\r\n        },\r\n    ],\r\n    newPostText: '',\r\n    profile:null,\r\n    status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case addpost:\r\n            let newPost = {\r\n                id: action.id,\r\n                massage: state.newPostText,\r\n                like: 0\r\n            };\r\n\r\n\r\n\r\n            return {\r\n                ...state,\r\n                postInfo: [...state.postInfo, newPost],\r\n                newPostText: ''\r\n            }\r\n        case updateNewTextPost:\r\n            debugger\r\n            return {\r\n                ...state,\r\n                newPostText: action.nextText\r\n            }\r\n        case SET_USER_PROFILE:\r\n\r\n            return{\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        default :\r\n            return state\r\n    }\r\n}\r\nexport const addPostText = (id) => {\r\n\r\n    return {\r\n        type: addpost,\r\n        id: id\r\n    }\r\n};\r\nexport const setStatusProfile = (status) => {\r\n\r\n    return {\r\n        type: SET_STATUS,\r\n        status: status\r\n    }\r\n};\r\n\r\nexport const updateNewPostText = (text) => {\r\n\r\n    return {\r\n        type: updateNewTextPost,\r\n        nextText: text\r\n    }\r\n};\r\n\r\n\r\n\r\nexport const setUsersProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\n\r\n\r\nexport  const getUsersProfile =(userId)=>{\r\n    return (dispatch)=>{\r\n        UserAPI.getProfile(userId).then(response => {\r\n           dispatch(setUsersProfile(response.data))\r\n        })\r\n    }\r\n}\r\nexport  const getStatus =(userId)=>{\r\n    return (dispatch)=>{\r\n        ProfileAPI.getStatus(userId).then(response => {\r\n\r\n           dispatch(setStatusProfile(response.data))\r\n        })\r\n    }\r\n}\r\nexport  const updateStatus =(status)=>{\r\n    return (dispatch)=>{\r\n        ProfileAPI.setStatus(status).then(response => {\r\n\r\n            if (response.data.resultCode === 0){\r\n\r\n                dispatch(setStatusProfile(status))\r\n            }\r\n\r\n        })\r\n    }\r\n}\r\nexport default profileReducer"]},"metadata":{},"sourceType":"module"}