{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Katerina\\\\PhpstormProjects\\\\react-practice\\\\src\\\\components\\\\Dialogs\\\\DialogsContainer.js\";\nimport React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport { addMessageActionCreator, UpdateMessagePostActionCreator } from \"../../redux/message-reducer\";\nimport Dialogs from \"./Dialogs\"; // const DialogItem = (props) => {\n//     console.log(props)\n//     let path = '/dialogs/' + props.id;\n//     return (\n//         <NavLink to={path} className={s.dialog} activeClassName={s.active}>{props.name}</NavLink>\n//     )\n// }\n//\n// const Message = (props) => {\n//     return (\n//         <div className=\"message\">{props.message}</div>\n//     )\n// }\n\nconst DialogsContainer = props => {\n  console.log(props);\n  let state = props.store.getState();\n  let newMessageElement = React.createRef();\n\n  const addMessage = () => {\n    props.dispatch(addMessageActionCreator());\n  };\n\n  let onMessageChange = () => {\n    let text = newMessageElement.current.value;\n    console.log(text);\n    props.dispatch(UpdateMessagePostActionCreator(text));\n  };\n\n  return React.createElement(Dialogs, {\n    addMessage: addMessage,\n    onMessageChange: onMessageChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }) // <div className={s.dialogs}>\n  //     <div className={s.dialogsItem}>\n  //         {props.dialogs.map((el, i) =>\n  //             <DialogItem name={el.name} id={el.id}/>\n  //         )}\n  //     </div>\n  //     <div className=\"messages\">\n  //         {props.message.map((el, i) =>\n  //             <Message message={el.message}/>\n  //         )}\n  //     </div>\n  //     <div>\n  //         <textarea onChange={onMessageChange} ref={newMessageElement} value={props.textMessage}/>\n  //         <button onClick={addMessage}>Add Message</button>\n  //     </div>\n  // </div>\n  ;\n};\n\nexport default DialogsContainer;","map":{"version":3,"sources":["C:/Users/Katerina/PhpstormProjects/react-practice/src/components/Dialogs/DialogsContainer.js"],"names":["React","NavLink","addMessageActionCreator","UpdateMessagePostActionCreator","Dialogs","DialogsContainer","props","console","log","state","store","getState","newMessageElement","createRef","addMessage","dispatch","onMessageChange","text","current","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAQC,OAAR,QAAsB,kBAAtB;AACA,SAAQC,uBAAR,EAAiCC,8BAAjC,QAAsE,6BAAtE;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,MAAIG,KAAK,GAAGH,KAAK,CAACI,KAAN,CAAYC,QAAZ,EAAZ;AACA,MAAIC,iBAAiB,GAAGZ,KAAK,CAACa,SAAN,EAAxB;;AACA,QAAMC,UAAU,GAAG,MAAM;AACrBR,IAAAA,KAAK,CAACS,QAAN,CAAeb,uBAAuB,EAAtC;AACH,GAFD;;AAGA,MAAIc,eAAe,GAAG,MAAM;AAExB,QAAIC,IAAI,GAAGL,iBAAiB,CAACM,OAAlB,CAA0BC,KAArC;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAYS,IAAZ;AACAX,IAAAA,KAAK,CAACS,QAAN,CAAeZ,8BAA8B,CAACc,IAAD,CAA7C;AACH,GALD;;AAMA,SAAS,oBAAC,OAAD;AAAS,IAAA,UAAU,EAAEH,UAArB;AAAiC,IAAA,eAAe,EAAEE,eAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAT,CACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBJ;AAkBH,CA/BD;;AAkCA,eAAeX,gBAAf","sourcesContent":["import React from 'react';\r\n\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {addMessageActionCreator, UpdateMessagePostActionCreator} from \"../../redux/message-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\n\r\n// const DialogItem = (props) => {\r\n//     console.log(props)\r\n//     let path = '/dialogs/' + props.id;\r\n//     return (\r\n//         <NavLink to={path} className={s.dialog} activeClassName={s.active}>{props.name}</NavLink>\r\n//     )\r\n// }\r\n//\r\n// const Message = (props) => {\r\n//     return (\r\n//         <div className=\"message\">{props.message}</div>\r\n//     )\r\n// }\r\nconst DialogsContainer = (props) => {\r\n    console.log(props)\r\n    let state = props.store.getState()\r\n    let newMessageElement = React.createRef()\r\n    const addMessage = () => {\r\n        props.dispatch(addMessageActionCreator())\r\n    }\r\n    let onMessageChange = () => {\r\n\r\n        let text = newMessageElement.current.value;\r\n        console.log(text)\r\n        props.dispatch(UpdateMessagePostActionCreator(text))\r\n    }\r\n    return ( <Dialogs addMessage={addMessage} onMessageChange={onMessageChange}/>\r\n        // <div className={s.dialogs}>\r\n        //     <div className={s.dialogsItem}>\r\n        //         {props.dialogs.map((el, i) =>\r\n        //             <DialogItem name={el.name} id={el.id}/>\r\n        //         )}\r\n        //     </div>\r\n        //     <div className=\"messages\">\r\n        //         {props.message.map((el, i) =>\r\n        //             <Message message={el.message}/>\r\n        //         )}\r\n        //     </div>\r\n        //     <div>\r\n        //         <textarea onChange={onMessageChange} ref={newMessageElement} value={props.textMessage}/>\r\n        //         <button onClick={addMessage}>Add Message</button>\r\n        //     </div>\r\n        // </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogsContainer\r\n"]},"metadata":{},"sourceType":"module"}