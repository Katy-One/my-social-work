{"ast":null,"code":"let updateNewTextPost = 'updateNewTextPost';\nlet addpost = 'ADD-POST';\nlet initialState = {\n  postInfo: [{\n    id: 1,\n    massage: 'post1',\n    like: 12\n  }, {\n    id: 2,\n    massage: 'post2',\n    like: 20\n  }, {\n    id: 3,\n    massage: 'post3',\n    like: 1\n  }],\n  newPostText: 'it-kamasutra'\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case addpost:\n      let newPost = {\n        id: action.id,\n        massage: state.newPostText,\n        like: 0\n      };\n      state.postInfo.push(newPost);\n      state.newPostText = '';\n      return state;\n\n    case updateNewTextPost:\n      state.newPostText = action.nextText;\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostActionCreator = id => {\n  return {\n    type: addpost,\n    id: id\n  };\n};\nexport const UpdateNewPostActionCreator = text => {\n  return {\n    type: updateNewTextPost,\n    nextText: text\n  };\n};\nexport default profileReducer;","map":{"version":3,"sources":["C:/Users/Katerina/PhpstormProjects/react-practice/src/redux/profile-reducer.js"],"names":["updateNewTextPost","addpost","initialState","postInfo","id","massage","like","newPostText","profileReducer","state","action","type","newPost","push","nextText","addPostActionCreator","UpdateNewPostActionCreator","text"],"mappings":"AAAA,IAAIA,iBAAiB,GAAG,mBAAxB;AACA,IAAIC,OAAO,GAAG,UAAd;AAEA,IAAIC,YAAY,GAAE;AACdC,EAAAA,QAAQ,EAAE,CACN;AACIC,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,OAAO,EAAE,OAFb;AAGIC,IAAAA,IAAI,EAAE;AAHV,GADM,EAMN;AACIF,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,OAAO,EAAE,OAFb;AAGIC,IAAAA,IAAI,EAAE;AAHV,GANM,EAWN;AACIF,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,OAAO,EAAE,OAFb;AAGIC,IAAAA,IAAI,EAAE;AAHV,GAXM,CADI;AAkBdC,EAAAA,WAAW,EAAE;AAlBC,CAAlB;;AAqBA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AAErD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,OAAL;AACI,UAAIW,OAAO,GAAG;AACVR,QAAAA,EAAE,EAAEM,MAAM,CAACN,EADD;AAEVC,QAAAA,OAAO,EAAEI,KAAK,CAACF,WAFL;AAGVD,QAAAA,IAAI,EAAE;AAHI,OAAd;AAKAG,MAAAA,KAAK,CAACN,QAAN,CAAeU,IAAf,CAAoBD,OAApB;AACAH,MAAAA,KAAK,CAACF,WAAN,GAAoB,EAApB;AACA,aAAOE,KAAP;;AACJ,SAAKT,iBAAL;AAEIS,MAAAA,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,QAA3B;AACA,aAAOL,KAAP;;AACJ;AACI,aAAOA,KAAP;AAfR;AAiBH,CAnBD;;AAoBA,OAAO,MAAMM,oBAAoB,GAAIX,EAAD,IAAQ;AAExC,SAAO;AACHO,IAAAA,IAAI,EAAEV,OADH;AAEHG,IAAAA,EAAE,EAAEA;AAFD,GAAP;AAIH,CANM;AAQP,OAAO,MAAMY,0BAA0B,GAAIC,IAAD,IAAU;AAEhD,SAAO;AACHN,IAAAA,IAAI,EAAEX,iBADH;AAEHc,IAAAA,QAAQ,EAAEG;AAFP,GAAP;AAIH,CANM;AAOP,eAAeT,cAAf","sourcesContent":["let updateNewTextPost = 'updateNewTextPost';\r\nlet addpost = 'ADD-POST';\r\n\r\nlet initialState ={\r\n    postInfo: [\r\n        {\r\n            id: 1,\r\n            massage: 'post1',\r\n            like: 12\r\n        },\r\n        {\r\n            id: 2,\r\n            massage: 'post2',\r\n            like: 20\r\n        },\r\n        {\r\n            id: 3,\r\n            massage: 'post3',\r\n            like: 1\r\n        },\r\n    ],\r\n    newPostText: 'it-kamasutra'\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case addpost:\r\n            let newPost = {\r\n                id: action.id,\r\n                massage: state.newPostText,\r\n                like: 0\r\n            };\r\n            state.postInfo.push(newPost);\r\n            state.newPostText = '';\r\n            return state;\r\n        case updateNewTextPost:\r\n\r\n            state.newPostText = action.nextText;\r\n            return state;\r\n        default :\r\n            return state\r\n    }\r\n}\r\nexport const addPostActionCreator = (id) => {\r\n\r\n    return {\r\n        type: addpost,\r\n        id: id\r\n    }\r\n};\r\n\r\nexport const UpdateNewPostActionCreator = (text) => {\r\n\r\n    return {\r\n        type: updateNewTextPost,\r\n        nextText: text\r\n    }\r\n};\r\nexport default profileReducer"]},"metadata":{},"sourceType":"module"}