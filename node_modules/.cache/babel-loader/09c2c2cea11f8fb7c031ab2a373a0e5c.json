{"ast":null,"code":"let store = {\n  _renderEntireTree() {},\n\n  _state: {\n    profilePage: {\n      postInfo: [{\n        id: 1,\n        massage: 'post1',\n        like: 12\n      }, {\n        id: 2,\n        massage: 'post2',\n        like: 20\n      }, {\n        id: 2,\n        massage: 'post3',\n        like: 1\n      }],\n      newPostText: 'it-kamasutra'\n    },\n    messagePage: {\n      messagesList: [{\n        message: 'Hi'\n      }, {\n        message: 'How are you?'\n      }, {\n        message: 'How is yore it?'\n      }, {\n        message: 'yo!!!!'\n      }],\n      names: [{\n        name: 'Dimych',\n        id: '1'\n      }, {\n        name: 'Kate',\n        id: '2'\n      }, {\n        name: 'Ann',\n        id: '3'\n      }, {\n        name: 'Sveta',\n        id: '4'\n      }, {\n        name: 'Andru',\n        id: '5'\n      }]\n    },\n    navLink: [{\n      link: 'Profile',\n      path: '/profile'\n    }, {\n      link: 'Massage',\n      path: '/dialogs'\n    }, {\n      link: 'News'\n    }, {\n      link: 'Music'\n    }, {\n      link: 'Settings'\n    }]\n  },\n\n  addPost() {\n    debugger;\n    let newPost = {\n      id: 5,\n      massage: this._state.profilePage.newPostText,\n      like: 0\n    };\n\n    this._state.profilePage.postInfo.push(newPost);\n\n    this._state.profilePage.newPostText = '';\n\n    this._renderEntireTree(this._state);\n  },\n\n  updateNewTekstPost(nextText) {\n    debugger;\n    this._state.profilePage.newPostText = nextText;\n\n    this._renderEntireTree(this._state);\n  },\n\n  subscribe(observer) {\n    this._renderEntireTree = observer;\n  },\n\n  getState() {\n    return this;\n  }\n\n};\nexport default store;","map":{"version":3,"sources":["C:/Users/Katerina/PhpstormProjects/react-practice/src/redux/state.js"],"names":["store","_renderEntireTree","_state","profilePage","postInfo","id","massage","like","newPostText","messagePage","messagesList","message","names","name","navLink","link","path","addPost","newPost","push","updateNewTekstPost","nextText","subscribe","observer","getState"],"mappings":"AAAA,IAAIA,KAAK,GAAG;AACRC,EAAAA,iBAAiB,GAAG,CAEnB,CAHO;;AAIRC,EAAAA,MAAM,EAAE;AACJC,IAAAA,WAAW,EAAE;AACTC,MAAAA,QAAQ,EAAE,CACN;AACIC,QAAAA,EAAE,EAAE,CADR;AAEIC,QAAAA,OAAO,EAAE,OAFb;AAGIC,QAAAA,IAAI,EAAE;AAHV,OADM,EAMN;AACIF,QAAAA,EAAE,EAAE,CADR;AAEIC,QAAAA,OAAO,EAAE,OAFb;AAGIC,QAAAA,IAAI,EAAE;AAHV,OANM,EAWN;AACIF,QAAAA,EAAE,EAAE,CADR;AAEIC,QAAAA,OAAO,EAAE,OAFb;AAGIC,QAAAA,IAAI,EAAE;AAHV,OAXM,CADD;AAkBTC,MAAAA,WAAW,EAAE;AAlBJ,KADT;AAsBJC,IAAAA,WAAW,EAAE;AACTC,MAAAA,YAAY,EAAE,CACV;AACIC,QAAAA,OAAO,EAAE;AADb,OADU,EAIV;AACIA,QAAAA,OAAO,EAAE;AADb,OAJU,EAOV;AACIA,QAAAA,OAAO,EAAE;AADb,OAPU,EAUV;AACIA,QAAAA,OAAO,EAAE;AADb,OAVU,CADL;AAeTC,MAAAA,KAAK,EAAE,CACH;AACIC,QAAAA,IAAI,EAAE,QADV;AAEIR,QAAAA,EAAE,EAAE;AAFR,OADG,EAIA;AACCQ,QAAAA,IAAI,EAAE,MADP;AAECR,QAAAA,EAAE,EAAE;AAFL,OAJA,EAOA;AACCQ,QAAAA,IAAI,EAAE,KADP;AAECR,QAAAA,EAAE,EAAE;AAFL,OAPA,EAUA;AACCQ,QAAAA,IAAI,EAAE,OADP;AAECR,QAAAA,EAAE,EAAE;AAFL,OAVA,EAaA;AACCQ,QAAAA,IAAI,EAAE,OADP;AAECR,QAAAA,EAAE,EAAE;AAFL,OAbA;AAfE,KAtBT;AAwDJS,IAAAA,OAAO,EAAE,CACL;AACIC,MAAAA,IAAI,EAAE,SADV;AAEIC,MAAAA,IAAI,EAAE;AAFV,KADK,EAKL;AACID,MAAAA,IAAI,EAAE,SADV;AAEIC,MAAAA,IAAI,EAAE;AAFV,KALK,EASL;AACID,MAAAA,IAAI,EAAE;AADV,KATK,EAaL;AACIA,MAAAA,IAAI,EAAE;AADV,KAbK,EAiBL;AACIA,MAAAA,IAAI,EAAE;AADV,KAjBK;AAxDL,GAJA;;AAmFRE,EAAAA,OAAO,GAAG;AACN;AACA,QAAIC,OAAO,GAAG;AACVb,MAAAA,EAAE,EAAE,CADM;AAEVC,MAAAA,OAAO,EAAE,KAAKJ,MAAL,CAAYC,WAAZ,CAAwBK,WAFvB;AAGVD,MAAAA,IAAI,EAAE;AAHI,KAAd;;AAKA,SAAKL,MAAL,CAAYC,WAAZ,CAAwBC,QAAxB,CAAiCe,IAAjC,CAAsCD,OAAtC;;AACA,SAAKhB,MAAL,CAAYC,WAAZ,CAAwBK,WAAxB,GAAsC,EAAtC;;AACA,SAAKP,iBAAL,CAAuB,KAAKC,MAA5B;AAEH,GA9FO;;AA+FRkB,EAAAA,kBAAkB,CAACC,QAAD,EAAW;AACzB;AACA,SAAKnB,MAAL,CAAYC,WAAZ,CAAwBK,WAAxB,GAAsCa,QAAtC;;AACA,SAAKpB,iBAAL,CAAuB,KAAKC,MAA5B;AAEH,GApGO;;AAqGRoB,EAAAA,SAAS,CAACC,QAAD,EAAW;AAChB,SAAKtB,iBAAL,GAAyBsB,QAAzB;AACH,GAvGO;;AAwGRC,EAAAA,QAAQ,GAAG;AACP,WAAO,IAAP;AACH;;AA1GO,CAAZ;AA8GA,eAAexB,KAAf","sourcesContent":["let store = {\r\n    _renderEntireTree() {\r\n\r\n    },\r\n    _state: {\r\n        profilePage: {\r\n            postInfo: [\r\n                {\r\n                    id: 1,\r\n                    massage: 'post1',\r\n                    like: 12\r\n                },\r\n                {\r\n                    id: 2,\r\n                    massage: 'post2',\r\n                    like: 20\r\n                },\r\n                {\r\n                    id: 2,\r\n                    massage: 'post3',\r\n                    like: 1\r\n                },\r\n            ],\r\n            newPostText: 'it-kamasutra'\r\n\r\n        },\r\n        messagePage: {\r\n            messagesList: [\r\n                {\r\n                    message: 'Hi'\r\n                },\r\n                {\r\n                    message: 'How are you?'\r\n                },\r\n                {\r\n                    message: 'How is yore it?'\r\n                },\r\n                {\r\n                    message: 'yo!!!!'\r\n                }\r\n            ],\r\n            names: [\r\n                {\r\n                    name: 'Dimych',\r\n                    id: '1'\r\n                }, {\r\n                    name: 'Kate',\r\n                    id: '2'\r\n                }, {\r\n                    name: 'Ann',\r\n                    id: '3'\r\n                }, {\r\n                    name: 'Sveta',\r\n                    id: '4'\r\n                }, {\r\n                    name: 'Andru',\r\n                    id: '5'\r\n                },\r\n            ]\r\n        },\r\n        navLink: [\r\n            {\r\n                link: 'Profile',\r\n                path: '/profile'\r\n            },\r\n            {\r\n                link: 'Massage',\r\n                path: '/dialogs'\r\n            },\r\n            {\r\n                link: 'News',\r\n\r\n            },\r\n            {\r\n                link: 'Music',\r\n\r\n            },\r\n            {\r\n                link: 'Settings',\r\n\r\n            }\r\n        ],\r\n    },\r\n    addPost() {\r\n        debugger\r\n        let newPost = {\r\n            id: 5,\r\n            massage: this._state.profilePage.newPostText,\r\n            like: 0\r\n        };\r\n        this._state.profilePage.postInfo.push(newPost);\r\n        this._state.profilePage.newPostText = '';\r\n        this._renderEntireTree(this._state);\r\n\r\n    },\r\n    updateNewTekstPost(nextText) {\r\n        debugger\r\n        this._state.profilePage.newPostText = nextText;\r\n        this._renderEntireTree(this._state)\r\n\r\n    },\r\n    subscribe(observer) {\r\n        this._renderEntireTree = observer\r\n    },\r\n    getState() {\r\n        return this\r\n    }\r\n};\r\n\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}