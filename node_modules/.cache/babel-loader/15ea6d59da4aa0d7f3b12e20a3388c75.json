{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Katerina\\\\PhpstormProjects\\\\react-practice\\\\src\\\\components\\\\Users\\\\UsersContainer.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { following, getUsers, isToggleProgress, loadingUsers, setTotalUsersCount, unfollowing } from \"../../redux/users-reducer\";\nimport * as axios from \"axios\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/preloader/Preloader\";\nimport { UserAPI } from \"../../api/api\";\n\nclass UsersContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.loadUsers = (page, flag) => {\n      page = this.props.currentPage;\n      page += 1;\n      console.log(page);\n      this.props.loadingUsers(page, flag, this.props.pageSize);\n    };\n\n    this.setCurrentPage2 = page => {\n      this.props.getUsers(page, this.props.pageSize); // this.props.setCurrentPage(page);\n      // this.props.setIsFetching(true)\n      // UserAPI.getUsers(page, this.props.pageSize).then(data => {\n      //     this.props.setIsFetching(false)\n      //     this.props.setUsers(data.items)\n      // })\n    };\n\n    this.isFollowed = page => {\n      this.props.getUsers(page, this.props.pageSize); // this.props.setCurrentPage(page);\n      // this.props.setIsFetching(true)\n      // UserAPI.getUsers(page, this.props.pageSize).then(data => {\n      //     this.props.setIsFetching(false)\n      //     this.props.setUsers(data.items)\n      // })\n    };\n\n    this.isFollow = page => {\n      this.props.getUsers(page, this.props.pageSize); // this.props.setCurrentPage(page);\n      // this.props.setIsFetching(true)\n      // UserAPI.getUsers(page, this.props.pageSize).then(data => {\n      //     this.props.setIsFetching(false)\n      //     this.props.setUsers(data.items)\n      // })\n    };\n\n    this.changePage = page => {\n      debugger;\n      this.props.getUsers(page, this.props.pageSize);\n      page += 1;\n    };\n\n    console.log(props);\n    let page1 = 1;\n  }\n\n  componentDidMount() {\n    this.props.getUsers(this.props.currentPage, this.props.pageSize); // this.props.getUsers(this.props.currentPage, this.props.pageSize).then(response => {\n    //     return response.data\n    // })\n\n    console.log(this.props);\n  }\n\n  render() {\n    let p = this.changePage(this.props.currentPage);\n    return React.createElement(React.Fragment, null, this.props.isFetching ? React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }) : null, React.createElement(Users, {\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      users: this.props.users,\n      setCurrentPage: this.setCurrentPage2,\n      following: this.props.following,\n      unfollowing: this.props.unfollowing,\n      loadUsers: this.loadUsers,\n      currentPage: this.props.currentPage,\n      followingInProgress: this.props.followingInProgress,\n      isToggleProgress: this.props.isToggleProgress,\n      changePage: p,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching,\n    followingInProgress: state.usersPage.followingInProgress\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setTotalUsersCount,\n  getUsers,\n  isToggleProgress,\n  following,\n  unfollowing,\n  loadingUsers\n})(UsersContainer);","map":{"version":3,"sources":["C:/Users/Katerina/PhpstormProjects/react-practice/src/components/Users/UsersContainer.js"],"names":["React","connect","following","getUsers","isToggleProgress","loadingUsers","setTotalUsersCount","unfollowing","axios","Users","Preloader","UserAPI","UsersContainer","Component","constructor","props","loadUsers","page","flag","currentPage","console","log","pageSize","setCurrentPage2","isFollowed","isFollow","changePage","page1","componentDidMount","render","p","isFetching","totalUsersCount","users","followingInProgress","mapStateToProps","state","usersPage"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {\r\n    following, getUsers, isToggleProgress,  loadingUsers,\r\n    setTotalUsersCount,\r\n    unfollowing\r\n} from \"../../redux/users-reducer\";\r\n\r\nimport * as axios from \"axios\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/preloader/Preloader\";\r\nimport {UserAPI} from \"../../api/api\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(props)\r\n        let page1 = 1\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n        // this.props.getUsers(this.props.currentPage, this.props.pageSize).then(response => {\r\n        //     return response.data\r\n        // })\r\n        console.log(this.props)\r\n    }\r\n\r\n    loadUsers = (page, flag) => {\r\n        page = this.props.currentPage;\r\n        page += 1;\r\n\r\n        console.log(page);\r\n        this.props.loadingUsers(page, flag, this.props.pageSize)\r\n\r\n    }\r\n\r\n    setCurrentPage2 = (page) => {\r\n        this.props.getUsers(page, this.props.pageSize)\r\n        // this.props.setCurrentPage(page);\r\n        // this.props.setIsFetching(true)\r\n        // UserAPI.getUsers(page, this.props.pageSize).then(data => {\r\n        //     this.props.setIsFetching(false)\r\n        //     this.props.setUsers(data.items)\r\n        // })\r\n\r\n\r\n    }\r\n    isFollowed = (page) => {\r\n        this.props.getUsers(page, this.props.pageSize)\r\n        // this.props.setCurrentPage(page);\r\n        // this.props.setIsFetching(true)\r\n        // UserAPI.getUsers(page, this.props.pageSize).then(data => {\r\n        //     this.props.setIsFetching(false)\r\n        //     this.props.setUsers(data.items)\r\n        // })\r\n\r\n\r\n    }\r\n    isFollow = (page) => {\r\n        this.props.getUsers(page, this.props.pageSize)\r\n        // this.props.setCurrentPage(page);\r\n        // this.props.setIsFetching(true)\r\n        // UserAPI.getUsers(page, this.props.pageSize).then(data => {\r\n        //     this.props.setIsFetching(false)\r\n        //     this.props.setUsers(data.items)\r\n        // })\r\n\r\n\r\n    }\r\n   changePage = (page) => {\r\n        debugger\r\n       this.props.getUsers(page, this.props.pageSize)\r\n       page += 1;\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        let p = this.changePage(this.props.currentPage)\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   users={this.props.users}\r\n                   setCurrentPage={this.setCurrentPage2}\r\n                   following={this.props.following}\r\n                   unfollowing={this.props.unfollowing}\r\n                   loadUsers={this.loadUsers}\r\n                   currentPage={this.props.currentPage}\r\n                   followingInProgress={this.props.followingInProgress}\r\n                   isToggleProgress={this.props.isToggleProgress}\r\n                   changePage={p}/>\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n    setTotalUsersCount,\r\n    getUsers,\r\n    isToggleProgress,\r\n    following,\r\n    unfollowing,\r\n    loadingUsers\r\n\r\n})(UsersContainer)\r\n"]},"metadata":{},"sourceType":"module"}