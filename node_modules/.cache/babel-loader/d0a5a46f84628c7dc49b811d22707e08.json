{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Katerina\\\\PhpstormProjects\\\\react-practice\\\\src\\\\components\\\\Users\\\\UsersContainer.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { follow, setCurrentPage, setIsFetching, setTotalUsersCount, setUsers, unfollow } from \"../../redux/users-reducer\";\nimport * as axios from \"axios\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/preloader/Preloader\";\nimport { UserAPI } from \"../../api/api\";\n\nclass UsersContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.loadUsers = (page, flag) => {\n      page = this.props.currentPage;\n      page += 1;\n      this.props.setCurrentPage(page);\n      this.props.setIsFetching(true);\n      console.log(page);\n      UserAPI.getUsers(page, this.props.pageSize).then(data => {\n        this.props.setIsFetching(false);\n        this.props.setUsers(data.items, flag);\n      });\n    };\n\n    this.setCurrentPage2 = page => {\n      this.props.setCurrentPage(page);\n      this.props.setIsFetching(true);\n      UserAPI.getUsers(page, this.props.pageSize).then(data => {\n        this.props.setIsFetching(false);\n        this.props.setUsers(data.items);\n      });\n    };\n\n    this.isFollowed = page => {\n      this.props.setCurrentPage(page);\n      this.props.setIsFetching(true);\n      UserAPI.getUsers(page, this.props.pageSize).then(data => {\n        this.props.setIsFetching(false);\n        this.props.setUsers(data.items);\n      });\n    };\n\n    this.isFollow = page => {\n      this.props.setCurrentPage(page);\n      this.props.setIsFetching(true);\n      UserAPI.getUsers(page, this.props.pageSize).then(data => {\n        this.props.setIsFetching(false);\n        this.props.setUsers(data.items);\n      });\n    };\n\n    console.log(props);\n  }\n\n  componentDidMount() {\n    this.props.setIsFetching(true);\n    debugger;\n    UserAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\n      this.props.setIsFetching(false);\n      this.props.setUsers(data.items);\n      this.props.setTotalUsersCount(data.totalCount);\n    });\n    console.log(this.props);\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.props.isFetching ? React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }) : null, React.createElement(Users, {\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      users: this.props.users,\n      setCurrentPage: this.setCurrentPage2,\n      unfollow: this.props.unfollow,\n      follow: this.props.follow,\n      loadUsers: this.loadUsers,\n      currentPage: this.props.currentPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  setTotalUsersCount,\n  setCurrentPage,\n  setIsFetching\n})(UsersContainer);","map":{"version":3,"sources":["C:/Users/Katerina/PhpstormProjects/react-practice/src/components/Users/UsersContainer.js"],"names":["React","connect","follow","setCurrentPage","setIsFetching","setTotalUsersCount","setUsers","unfollow","axios","Users","Preloader","UserAPI","UsersContainer","Component","constructor","props","loadUsers","page","flag","currentPage","console","log","getUsers","pageSize","then","data","items","setCurrentPage2","isFollowed","isFollow","componentDidMount","totalCount","render","isFetching","totalUsersCount","users","mapStateToProps","state","usersPage"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    setIsFetching,\r\n    setTotalUsersCount,\r\n    setUsers,\r\n    unfollow\r\n} from \"../../redux/users-reducer\";\r\n\r\nimport * as axios from \"axios\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/preloader/Preloader\";\r\nimport {UserAPI} from \"../../api/api\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(props)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.setIsFetching(true)\r\n        debugger\r\n        UserAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\r\n\r\n            this.props.setIsFetching(false)\r\n            this.props.setUsers(data.items)\r\n            this.props.setTotalUsersCount(data.totalCount)\r\n        })\r\n\r\n        console.log(this.props)\r\n    }\r\n\r\n    loadUsers = (page, flag) => {\r\n        page = this.props.currentPage;\r\n        page += 1;\r\n        this.props.setCurrentPage(page);\r\n        this.props.setIsFetching(true)\r\n        console.log(page);\r\n        UserAPI.getUsers(page, this.props.pageSize).then(data => {\r\n            this.props.setIsFetching(false)\r\n            this.props.setUsers(data.items, flag);\r\n        })\r\n\r\n    }\r\n\r\n    setCurrentPage2 = (page) => {\r\n\r\n        this.props.setCurrentPage(page);\r\n        this.props.setIsFetching(true)\r\n        UserAPI.getUsers(page, this.props.pageSize).then(data => {\r\n            this.props.setIsFetching(false)\r\n            this.props.setUsers(data.items)\r\n        })\r\n\r\n\r\n    }\r\n    isFollowed = (page) => {\r\n\r\n        this.props.setCurrentPage(page);\r\n        this.props.setIsFetching(true)\r\n        UserAPI.getUsers(page, this.props.pageSize).then(data => {\r\n            this.props.setIsFetching(false)\r\n            this.props.setUsers(data.items)\r\n        })\r\n\r\n\r\n    }\r\n    isFollow = (page) => {\r\n\r\n        this.props.setCurrentPage(page);\r\n        this.props.setIsFetching(true)\r\n        UserAPI.getUsers(page, this.props.pageSize).then(data=> {\r\n            this.props.setIsFetching(false)\r\n            this.props.setUsers(data.items)\r\n        })\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/>: null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   users={this.props.users}\r\n                   setCurrentPage={this.setCurrentPage2}\r\n                   unfollow={this.props.unfollow}\r\n                   follow={this.props.follow}\r\n                   loadUsers={this.loadUsers}\r\n                   currentPage={this.props.currentPage}/>\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n    };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps,{\r\n    follow,\r\n    unfollow,\r\n    setUsers,\r\n    setTotalUsersCount,\r\n    setCurrentPage,\r\n    setIsFetching\r\n})(UsersContainer)\r\n"]},"metadata":{},"sourceType":"module"}