{"ast":null,"code":"import { authAPI } from \"../api/api\";\nimport { stopSubmit } from 'redux-form';\nimport { setAuth } from \"./auth-reducer\";\nconst SET_INITIALIZED = 'SET_INITIALIZED';\nlet initialState = {\n  initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_INITIALIZED:\n      return { ...state,\n        initialized: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const setInitialized = () => {\n  return {\n    type: SET_INITIALIZED\n  };\n};\nexport const initialzeApp = () => {\n  return dispatch => {\n    let promise = dispatch(setAuth());\n    Promise.all([promise]).then(() => {\n      dispatch(setInitialized());\n    });\n  };\n};\nexport default appReducer;","map":{"version":3,"sources":["C:/Users/Katerina/PhpstormProjects/react-practice/src/redux/app-reducer.js"],"names":["authAPI","stopSubmit","setAuth","SET_INITIALIZED","initialState","initialized","appReducer","state","action","type","setInitialized","initialzeApp","dispatch","promise","Promise","all","then"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,YAAtB;AACA,SAAQC,UAAR,QAAyB,YAAzB;AACA,SAAQC,OAAR,QAAsB,gBAAtB;AAEA,MAAMC,eAAe,GAAG,iBAAxB;AAEA,IAAIC,YAAY,GAAG;AAEfC,EAAAA,WAAW,EAAE;AAFE,CAAnB;;AAMA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAEjD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAMN,eAAN;AAEI,aAAO,EACH,GAAGI,KADA;AAEHF,QAAAA,WAAW,EAAE;AAFV,OAAP;;AAMJ;AACI,aAAOE,KAAP;AAVR;AAYH,CAdD;;AAeA,OAAO,MAAMG,cAAc,GAAG,MAAM;AAEhC,SAAO;AACHD,IAAAA,IAAI,EAAEN;AADH,GAAP;AAIH,CANM;AASP,OAAO,MAAMQ,YAAY,GAAG,MAAM;AAC9B,SAAQC,QAAD,IAAc;AAClB,QAAIC,OAAO,GAAGD,QAAQ,CAACV,OAAO,EAAR,CAAtB;AAEDY,IAAAA,OAAO,CAACC,GAAR,CAAY,CAACF,OAAD,CAAZ,EAAuBG,IAAvB,CAA4B,MAAI;AAC3BJ,MAAAA,QAAQ,CAACF,cAAc,EAAf,CAAR;AACH,KAFF;AAID,GAPD;AASH,CAVM;AAYP,eAAeJ,UAAf","sourcesContent":["import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from 'redux-form'\r\nimport {setAuth} from \"./auth-reducer\";\r\n\r\nconst SET_INITIALIZED = 'SET_INITIALIZED'\r\n\r\nlet initialState = {\r\n\r\n    initialized: false\r\n}\r\n\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case  SET_INITIALIZED:\r\n\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n\r\n        default :\r\n            return state\r\n    }\r\n}\r\nexport const setInitialized = () => {\r\n\r\n    return {\r\n        type: SET_INITIALIZED,\r\n\r\n    }\r\n};\r\n\r\n\r\nexport const initialzeApp = () => {\r\n    return (dispatch) => {\r\n       let promise = dispatch(setAuth());\r\n\r\n      Promise.all([promise]).then(()=>{\r\n           dispatch(setInitialized());\r\n       })\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default appReducer"]},"metadata":{},"sourceType":"module"}