{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Katerina\\\\PhpstormProjects\\\\react-practice\\\\src\\\\components\\\\Dialogs\\\\Dialogs.js\";\nimport React, { useState } from 'react';\nimport s from './Dialogs.module.css';\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport { addMessageActionCreator, UpdateMessagePostActionCreator } from \"../../redux/message-reducer\";\nimport { Field, reduxForm } from 'redux-form';\nimport { TextArea } from \"../common/FormControls/FormControls\";\nimport { maxLength10, required } from \"../../utils/validator/validator\";\n\nconst DialogsForm = props => {\n  const {\n    handleSubmit,\n    load,\n    pristine,\n    reset,\n    submitting\n  } = props;\n  return React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Field, {\n    placeholder: 'post text',\n    name: 'post_text',\n    component: TextArea,\n    validate: [required, maxLength10],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    disabled: props.pristine || props.submitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Add post\"));\n};\n\nconst ReduxDialogsForm = reduxForm({\n  // a unique name for the form\n  form: 'login'\n})(DialogsForm);\n\nconst DialogItem = props => {\n  let [state, setState] = useState(false);\n\n  const UserMessage = e => {\n    setState(true);\n  };\n\n  let path = '/dialogs/' + props.id;\n\n  let addSubmit = value => {\n    debugger;\n    props.addMessageActionCreator(value.post_text, props.id);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(NavLink, {\n    to: path,\n    onClick: () => {\n      UserMessage();\n    },\n    className: s.dialog,\n    activeClassName: s.active,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, props.name), state && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, props.message.map((el, i) => {\n    if (props.id == el.id) {\n      return React.createElement(React.Fragment, null, \"         \", React.createElement(ReduxDialogsForm, {\n        onSubmit: addSubmit,\n        id: props.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(Message, {\n        message: el.message,\n        id: props.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }));\n    }\n  }))));\n};\n\nconst Message = props => {\n  return React.createElement(\"div\", {\n    className: \"message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, props.message);\n};\n\nconst Dialogs = props => {\n  console.log(props); //   let [state1, setState1] = useState(props.)\n\n  return React.createElement(\"div\", {\n    className: s.dialogs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: s.dialogsItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, props.dialogs.map((el, i) => React.createElement(DialogItem, {\n    addMessageActionCreator: props.addMessageActionCreator,\n    message: props.message,\n    name: el.name,\n    id: el.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }))));\n};\n\nexport default Dialogs;","map":{"version":3,"sources":["C:/Users/Katerina/PhpstormProjects/react-practice/src/components/Dialogs/Dialogs.js"],"names":["React","useState","s","NavLink","Redirect","addMessageActionCreator","UpdateMessagePostActionCreator","Field","reduxForm","TextArea","maxLength10","required","DialogsForm","props","handleSubmit","load","pristine","reset","submitting","ReduxDialogsForm","form","DialogItem","state","setState","UserMessage","e","path","id","addSubmit","value","post_text","dialog","active","name","message","map","el","i","Message","Dialogs","console","log","dialogs","dialogsItem"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {addMessageActionCreator, UpdateMessagePostActionCreator} from \"../../redux/message-reducer\";\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {TextArea} from \"../common/FormControls/FormControls\";\r\nimport {maxLength10, required} from \"../../utils/validator/validator\";\r\n\r\n\r\nconst DialogsForm = (props) => {\r\n\r\n    const {handleSubmit, load, pristine, reset, submitting} = props\r\n    return (\r\n\r\n        <form onSubmit={props.handleSubmit}>\r\n\r\n\r\n            <div>\r\n                <Field placeholder={'post text'} name={'post_text'} component={TextArea}\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n\r\n\r\n            <button disabled={props.pristine || props.submitting}>Add post</button>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst ReduxDialogsForm = reduxForm({\r\n    // a unique name for the form\r\n    form: 'login'\r\n})(DialogsForm)\r\n\r\nconst DialogItem = (props) => {\r\n    let [state, setState] = useState(false)\r\n    const UserMessage = (e) => {\r\n\r\n        setState(true)\r\n    }\r\n\r\n    let path = '/dialogs/' + props.id;\r\n    let addSubmit = (value) => {\r\n        debugger\r\n        props.addMessageActionCreator(value.post_text, props.id)\r\n    }\r\n    return (<>\r\n            <NavLink to={path} onClick={() => {\r\n                UserMessage()\r\n            }} className={s.dialog} activeClassName={s.active}>{props.name}</NavLink>\r\n            {state &&\r\n            <div>\r\n\r\n                <div>\r\n                    {props.message.map((el, i) => {\r\n\r\n                            if (props.id == el.id) {\r\n\r\n                                return <>         <ReduxDialogsForm onSubmit={addSubmit} id={props.id}/>\r\n                                    <Message message={el.message} id={props.id}/></>\r\n                            }\r\n                        }\r\n                    )}\r\n                </div>\r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className=\"message\">{props.message}</div>\r\n    )\r\n}\r\nconst Dialogs = (props) => {\r\n    console.log(props)\r\n\r\n    //   let [state1, setState1] = useState(props.)\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n\r\n            <div className={s.dialogsItem}>\r\n                {props.dialogs.map((el, i) =>\r\n                    <DialogItem addMessageActionCreator={props.addMessageActionCreator} message={props.message}\r\n                                name={el.name} id={el.id}/>\r\n                )}\r\n            </div>\r\n            {/*<button >ggg</button>*/}\r\n\r\n\r\n        </div>)\r\n}\r\n\r\n\r\nexport default Dialogs\r\n"]},"metadata":{},"sourceType":"module"}