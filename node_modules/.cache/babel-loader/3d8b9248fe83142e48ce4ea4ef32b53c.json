{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Katerina\\\\PhpstormProjects\\\\react-practice\\\\src\\\\components\\\\Profile\\\\MyPosts\\\\MyPosts.js\";\nimport React from \"react\";\nimport s from './MyPosts.module.css';\nimport MyPost from './MyPost/MyPost';\nimport { addPostActionCreator, UpdateNewPostActionCreator } from \"../../../redux/state\";\n\nconst MyPosts = props => {\n  console.log(props);\n  let arr_post = props.posts.map((el, i) => React.createElement(MyPost, {\n    massage: el.massage,\n    id: i + 1,\n    like: el.like,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }));\n  let newPostElement = React.createRef();\n\n  const addPost = () => {\n    props.dispatch(addPostActionCreator());\n  };\n\n  const onPostChange = () => {\n    let text = newPostElement.current.value;\n    props.dispatch(UpdateNewPostActionCreator(text));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \" My post\"), React.createElement(\"textarea\", {\n    onChange: onPostChange,\n    ref: newPostElement,\n    value: props.newPostText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: addPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"add button\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, arr_post));\n};\n\nexport default MyPosts;","map":{"version":3,"sources":["C:/Users/Katerina/PhpstormProjects/react-practice/src/components/Profile/MyPosts/MyPosts.js"],"names":["React","s","MyPost","addPostActionCreator","UpdateNewPostActionCreator","MyPosts","props","console","log","arr_post","posts","map","el","i","massage","like","newPostElement","createRef","addPost","dispatch","onPostChange","text","current","value","newPostText"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,sBAAd;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAAQC,oBAAR,EAA8BC,0BAA9B,QAA+D,sBAA/D;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,MAAIG,QAAQ,GAAGH,KAAK,CAACI,KAAN,CAAYC,GAAZ,CAAgB,CAACC,EAAD,EAAKC,CAAL,KAAW,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAED,EAAE,CAACE,OAApB;AAA6B,IAAA,EAAE,EAAED,CAAC,GAAC,CAAnC;AAAsC,IAAA,IAAI,EAAED,EAAE,CAACG,IAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA3B,CAAf;AACA,MAAIC,cAAc,GAAGhB,KAAK,CAACiB,SAAN,EAArB;;AACA,QAAMC,OAAO,GAAG,MAAM;AAClBZ,IAAAA,KAAK,CAACa,QAAN,CAAehB,oBAAoB,EAAnC;AACH,GAFD;;AAGA,QAAMiB,YAAY,GAAG,MAAM;AAEvB,QAAIC,IAAI,GAAGL,cAAc,CAACM,OAAf,CAAuBC,KAAlC;AAEAjB,IAAAA,KAAK,CAACa,QAAN,CAAef,0BAA0B,CAACiB,IAAD,CAAzC;AAEH,GAND;;AAOA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAU,IAAA,QAAQ,EAAED,YAApB;AAAkC,IAAA,GAAG,EAAEJ,cAAvC;AAAuD,IAAA,KAAK,EAAEV,KAAK,CAACkB,WAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAQ,IAAA,OAAO,EAAEN,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,CADG,EAOH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,QADL,CAPG,CAAP;AAWH,CAzBD;;AA0BA,eAAeJ,OAAf","sourcesContent":["import React from \"react\";\r\nimport s from './MyPosts.module.css'\r\nimport MyPost from './MyPost/MyPost'\r\nimport {addPostActionCreator, UpdateNewPostActionCreator} from \"../../../redux/state\";\r\n\r\nconst MyPosts = (props) => {\r\n    console.log(props)\r\n    let arr_post = props.posts.map((el, i) => <MyPost massage={el.massage} id={i+1} like={el.like}/>);\r\n    let newPostElement = React.createRef()\r\n    const addPost = () => {\r\n        props.dispatch(addPostActionCreator())\r\n    }\r\n    const onPostChange = () => {\r\n\r\n        let text = newPostElement.current.value;\r\n\r\n        props.dispatch(UpdateNewPostActionCreator(text) )\r\n\r\n    }\r\n    return <div>\r\n        <div>\r\n            <h3> My post</h3>\r\n            <textarea onChange={onPostChange} ref={newPostElement} value={props.newPostText}/>\r\n            <button onClick={addPost}>add button</button>\r\n\r\n        </div>\r\n        <div>\r\n            {arr_post}\r\n        </div>\r\n    </div>\r\n}\r\nexport default MyPosts"]},"metadata":{},"sourceType":"module"}