{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Katerina\\\\PhpstormProjects\\\\react-practice\\\\src\\\\components\\\\Users\\\\Users.js\";\nimport React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport s from \"./Users.module.css\";\nimport Pagination from \"react-js-pagination\"; // require(\"bootstrap/less/bootstrap.less\");\n\nlet Users = props => {\n  console.log(props);\n  let a = 500;\n\n  function w(c) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve();\n      }, c * a);\n    });\n  }\n\n  w(10).then(() => {\n    console.log('lll');\n  });\n  let page;\n  let flag = true;\n  let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let portionSize = Math.ceil(pagesCount / 10);\n  let [portionNumber, setPortionNamber] = useState(1);\n  let leftNum = (portionNumber - 1) * 10 + 1;\n  let rightNum = portionNumber * 10;\n\n  let changePage1 = () => {\n    props.changePage();\n  };\n\n  let changePage2 = () => {\n    props.changePagePrev();\n  };\n\n  let handlePageChange = pageNumber => {\n    props.setCurrentPage(pageNumber);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: s.pageNumbers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, pages.filter(p).map(p => {\n    if (p === props.currentPage) {\n      return React.createElement(\"span\", {\n        onClick: () => {\n          props.setCurrentPage(p);\n        },\n        className: props.currentPage === p && s.activePage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, p);\n    }\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: changePage2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Prev\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, props.currentPage), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, pages.length), React.createElement(\"button\", {\n    onClick: changePage1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Next\"))), React.createElement(\"div\", {\n    className: s.usersWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, props.users.map((el, i) => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: s.left,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, el.id), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    to: '/profile/' + el.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: el.photos.small !== null ? el.photos.small : 'https://www.kodefork.com/static/users/images/user.png',\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, el.followed ? React.createElement(\"button\", {\n    disabled: props.followingInProgress.some(id => id == el.id),\n    onClick: () => {\n      props.unfollowing(el.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"unfollow\") : React.createElement(\"button\", {\n    disabled: props.followingInProgress.some(id => id == el.id),\n    onClick: () => {\n      props.following(el.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"follow\"))), React.createElement(\"div\", {\n    className: s.right,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, el.name), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, el.status)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"el.locations.city\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"el.locations.country\"))))), React.createElement(\"button\", {\n    onClick: () => {\n      props.loadUsers(page, flag);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Load more\")));\n};\n\nexport default Users;","map":{"version":3,"sources":["C:/Users/Katerina/PhpstormProjects/react-practice/src/components/Users/Users.js"],"names":["React","useState","NavLink","s","Pagination","Users","props","console","log","a","w","c","Promise","resolve","reject","setTimeout","then","page","flag","pagesCount","Math","ceil","totalUsersCount","pageSize","pages","i","push","portionSize","portionNumber","setPortionNamber","leftNum","rightNum","changePage1","changePage","changePage2","changePagePrev","handlePageChange","pageNumber","setCurrentPage","pageNumbers","filter","p","map","currentPage","activePage","length","usersWrapper","users","el","left","id","photos","small","followed","followingInProgress","some","unfollowing","following","right","name","status","loadUsers"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\n\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"./Users.module.css\"\r\nimport Pagination from \"react-js-pagination\";\r\n// require(\"bootstrap/less/bootstrap.less\");\r\n\r\nlet Users = (props) => {\r\n    console.log(props)\r\n    let a = 500\r\n\r\n    function w(c) {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                resolve()\r\n            }, c * a)\r\n        })\r\n    }\r\n\r\n    w(10).then(() => {\r\n        console.log('lll')\r\n    })\r\n    let page;\r\n    let flag = true;\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    let portionSize = Math.ceil(pagesCount / 10)\r\n    let [portionNumber, setPortionNamber] =useState(1)\r\n    let leftNum = (portionNumber -1) * 10 + 1\r\n    let rightNum = portionNumber * 10\r\n    let changePage1 = () => {\r\n        props.changePage()\r\n    }\r\n    let changePage2 = () => {\r\n        props.changePagePrev()\r\n    }\r\n    let handlePageChange = (pageNumber) => {\r\n        props.setCurrentPage(pageNumber)\r\n\r\n    }\r\n\r\n    return <div>\r\n        <div className={s.pageNumbers}>\r\n            {/*<Pagination*/}\r\n            {/*    activePage={props.currentPage}*/}\r\n            {/*    itemsCountPerPage={20}*/}\r\n            {/*    totalItemsCount={props.totalUsersCount}*/}\r\n            {/*    pageRangeDisplayed={4}*/}\r\n            {/*    onChange={handlePageChange}*/}\r\n\r\n            {/*    // activeClassName={s.active}*/}\r\n            {/*    activeLinkClass={s.active}*/}\r\n            {/*/>*/}\r\n            {pages.filter(p).map(p => {\r\n\r\n                if (p === props.currentPage) {\r\n                    return <span onClick={() => {\r\n                        props.setCurrentPage(p)\r\n                    }} className={props.currentPage === p && s.activePage}>{p}</span>\r\n\r\n                }\r\n            })}\r\n\r\n            <div>\r\n                <button onClick={changePage2}>Prev</button>\r\n\r\n                <span>{props.currentPage}</span>\r\n                <span>{pages.length}</span>\r\n                <button onClick={changePage1}>Next</button>\r\n            </div>\r\n        </div>\r\n        <div className={s.usersWrapper}>\r\n\r\n            {\r\n                props.users.map((el, i) =>\r\n                    <div>\r\n                        <div className={s.left}>\r\n                            <span>{el.id}</span>\r\n                            <div>\r\n                                <NavLink to={'/profile/' + el.id}>\r\n                                    <img\r\n                                        src={el.photos.small !== null ? el.photos.small : 'https://www.kodefork.com/static/users/images/user.png'}\r\n                                        alt=\"\"/>\r\n                                </NavLink>\r\n                            </div>\r\n                            <div>\r\n                                {el.followed\r\n                                    ? <button disabled={props.followingInProgress.some(id => id == el.id)}\r\n                                              onClick={() => {\r\n                                                  props.unfollowing(el.id)\r\n                                              }}>unfollow</button>\r\n                                    : <button disabled={props.followingInProgress.some(id => id == el.id)}\r\n                                              onClick={() => {\r\n                                                  props.following(el.id)\r\n                                              }}>follow</button>}\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className={s.right}>\r\n                            <div>\r\n                                <div>{el.name}</div>\r\n                                <div>{el.status}</div>\r\n                            </div>\r\n                            <div>\r\n                                <div>{\"el.locations.city\"}</div>\r\n                                <div>{\"el.locations.country\"}</div>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            <button onClick={() => {\r\n                props.loadUsers(page, flag)\r\n            }}>Load more\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n\r\n}\r\n\r\nexport default Users"]},"metadata":{},"sourceType":"module"}