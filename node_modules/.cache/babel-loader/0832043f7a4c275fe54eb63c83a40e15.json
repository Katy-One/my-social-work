{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Katerina\\\\PhpstormProjects\\\\react-practice\\\\src\\\\components\\\\Profile\\\\ProfileContainer.js\";\nimport React from \"react\";\nimport Profile from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport { getStatus, getUsersProfile, setPhotoApi, updateStatus } from \"../../redux/profile-reducer\";\nimport { Redirect, withRouter } from \"react-router-dom\";\nimport { withAuthRedirect } from \"../../hoc/AuthRedirect\";\nimport { compose } from \"redux\";\n\nclass ProfileContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props);\n  }\n\n  componentDidMount(props) {\n    let userId = this.props.match.params.userId;\n\n    if (!userId) {\n      userId = this.props.authorizedUserId;\n\n      if (!userId) {\n        this.props.history.push('/login');\n      }\n    }\n\n    this.props.getUsersProfile(userId);\n    this.props.getStatus(userId);\n  }\n\n  shouldComponentUpdate(prevProps, prevState, snapshot) {\n    console.log(prevProps);\n\n    if (this.props.match.params.userId == prevProps.match.params.userId) {\n      let userId = this.props.match.params.userId;\n\n      if (!userId) {\n        userId = this.props.authorizedUserId;\n\n        if (!userId) {\n          this.props.history.push('/login');\n        }\n      }\n\n      this.props.getUsersProfile(userId);\n      this.props.getStatus(userId);\n    }\n  }\n\n  render() {\n    {\n      if (this.props.isAuth === false && this.props.location.pathname === '/profile') {\n        return React.createElement(Redirect, {\n          to: '/login',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        });\n      }\n    }\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Profile, Object.assign({\n      setPhotoApi: this.props.setPhotoApi\n    }, this.props, {\n      profile: this.props.profile,\n      status: this.props.status,\n      getUsersProfile: this.props.getUsersProfile,\n      updateStatus: this.props.updateStatus,\n      ownerId: !this.props.authorizedUserId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nlet mapStateToProps = state => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorizedUserId: state.auth.userId,\n  isAuth: state.auth.isAuth,\n  photo: state.profilePage.photo\n});\n\nexport default compose(connect(mapStateToProps, {\n  getUsersProfile,\n  getStatus,\n  updateStatus,\n  setPhotoApi\n}), withRouter)(ProfileContainer);","map":{"version":3,"sources":["C:/Users/Katerina/PhpstormProjects/react-practice/src/components/Profile/ProfileContainer.js"],"names":["React","Profile","connect","getStatus","getUsersProfile","setPhotoApi","updateStatus","Redirect","withRouter","withAuthRedirect","compose","ProfileContainer","Component","constructor","props","console","log","componentDidMount","userId","match","params","authorizedUserId","history","push","shouldComponentUpdate","prevProps","prevState","snapshot","render","isAuth","location","pathname","profile","status","mapStateToProps","state","profilePage","auth","photo"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUsersProfile, setPhotoApi, updateStatus} from \"../../redux/profile-reducer\";\r\n\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/AuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(this.props)\r\n    }\r\n\r\n    componentDidMount(props) {\r\n\r\n        let userId = this.props.match.params.userId\r\n\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n\r\n            if (!userId) {\r\n\r\n                this.props.history.push('/login')\r\n\r\n            }\r\n        }\r\n\r\n        this.props.getUsersProfile(userId)\r\n        this.props.getStatus(userId)\r\n\r\n    }\r\n\r\n    shouldComponentUpdate(prevProps, prevState, snapshot) {\r\n        console.log(prevProps)\r\n        if (this.props.match.params.userId == prevProps.match.params.userId) {\r\n            let userId = this.props.match.params.userId\r\n\r\n            if (!userId) {\r\n                userId = this.props.authorizedUserId\r\n\r\n                if (!userId) {\r\n\r\n                    this.props.history.push('/login')\r\n\r\n                }\r\n            }\r\n\r\n            this.props.getUsersProfile(userId)\r\n            this.props.getStatus(userId)\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        {\r\n            if (this.props.isAuth === false && this.props.location.pathname === '/profile') {\r\n                return <Redirect to={'/login'}/>\r\n            }\r\n        }\r\n        return <>\r\n\r\n            <div>\r\n                <Profile setPhotoApi={this.props.setPhotoApi} {...this.props} profile={this.props.profile}\r\n                         status={this.props.status} getUsersProfile={this.props.getUsersProfile}\r\n                         updateStatus={this.props.updateStatus}\r\n                ownerId={!this.props.authorizedUserId}/>\r\n            </div>\r\n\r\n\r\n        </>\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n    photo: state.profilePage.photo\r\n})\r\nexport default compose(connect(mapStateToProps, {\r\n    getUsersProfile,\r\n    getStatus,\r\n    updateStatus,\r\n    setPhotoApi\r\n}), withRouter)(ProfileContainer)"]},"metadata":{},"sourceType":"module"}