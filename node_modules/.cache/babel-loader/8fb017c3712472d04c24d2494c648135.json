{"ast":null,"code":"const addnews = 'addnews';\nlet initialState = {\n  allNews: [{\n    id: 0,\n    data: '23.10.2020',\n    news: 'la la la la ',\n    author: 'Katy',\n    newsState: false\n  }, {\n    id: 1,\n    data: '14.05.2020',\n    news: 'pa pa pa pa  ',\n    author: 'Ann',\n    newsState: false\n  }, {\n    id: 2,\n    data: '18.09.2020',\n    news: 'yo yo yo yo yo ',\n    author: 'Jack',\n    newsState: false\n  }]\n};\n\nconst newsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case addnews:\n      const userForRemoveId = action.id;\n      let a = { ...state,\n        allNews: state.allNews.filter(user => {\n          return user.id !== userForRemoveId;\n        })\n      };\n      debugger;\n      return { ...state,\n        allNews: [...state.allNews, state]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default newsReducer;\nexport const addNewsActionCreator = id => {\n  return {\n    type: addnews,\n    id: id\n  };\n}; // export const UpdateNewPostActionCreator = (text) => {\n//\n//    return {\n//       type: updateNewTextPost,\n//       nextText: text\n//    }\n// };","map":{"version":3,"sources":["C:/Users/Katerina/PhpstormProjects/react-practice/src/redux/news-reducer.js"],"names":["addnews","initialState","allNews","id","data","news","author","newsState","newsReducer","state","action","type","userForRemoveId","a","filter","user","addNewsActionCreator"],"mappings":"AAAA,MAAMA,OAAO,GAAG,SAAhB;AACA,IAAIC,YAAY,GAAG;AACfC,EAAAA,OAAO,EAAE,CACL;AACIC,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,YAFV;AAGIC,IAAAA,IAAI,EAAE,cAHV;AAIIC,IAAAA,MAAM,EAAE,MAJZ;AAKIC,IAAAA,SAAS,EAAE;AALf,GADK,EAQL;AACIJ,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,YAFV;AAGIC,IAAAA,IAAI,EAAE,eAHV;AAIIC,IAAAA,MAAM,EAAE,KAJZ;AAKIC,IAAAA,SAAS,EAAE;AALf,GARK,EAeL;AACIJ,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,YAFV;AAGIC,IAAAA,IAAI,EAAE,iBAHV;AAIIC,IAAAA,MAAM,EAAE,MAJZ;AAKIC,IAAAA,SAAS,EAAE;AALf,GAfK;AADM,CAAnB;;AA2BA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,OAAL;AACI,YAAMY,eAAe,GAAGF,MAAM,CAACP,EAA/B;AACA,UAAIU,CAAC,GAAG,EACJ,GAAGJ,KADC;AAEJP,QAAAA,OAAO,EAAEO,KAAK,CAACP,OAAN,CAAcY,MAAd,CAAsBC,IAAD,IAAU;AACpC,iBAAOA,IAAI,CAACZ,EAAL,KAAYS,eAAnB;AACH,SAFQ;AAFL,OAAR;AASA;AACA,aAAO,EACH,GAAGH,KADA;AAGHP,QAAAA,OAAO,EAAE,CAAC,GAAGO,KAAK,CAACP,OAAV,EAAmBO,KAAnB;AAHN,OAAP;;AASJ;AACI,aAAOA,KAAP;AAvBR;AAyBH,CA1BD;;AA4BA,eAAeD,WAAf;AACA,OAAO,MAAMQ,oBAAoB,GAAIb,EAAD,IAAQ;AAExC,SAAO;AACHQ,IAAAA,IAAI,EAAEX,OADH;AAEHG,IAAAA,EAAE,EAAEA;AAFD,GAAP;AAIH,CANM,C,CAQP;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["const addnews = 'addnews'\r\nlet initialState = {\r\n    allNews: [\r\n        {\r\n            id: 0,\r\n            data: '23.10.2020',\r\n            news: 'la la la la ',\r\n            author: 'Katy',\r\n            newsState: false\r\n        },\r\n        {\r\n            id: 1,\r\n            data: '14.05.2020',\r\n            news: 'pa pa pa pa  ',\r\n            author: 'Ann',\r\n            newsState: false\r\n        },\r\n        {\r\n            id: 2,\r\n            data: '18.09.2020',\r\n            news: 'yo yo yo yo yo ',\r\n            author: 'Jack',\r\n            newsState: false\r\n        }\r\n    ]\r\n}\r\n\r\n\r\nconst newsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case addnews:\r\n            const userForRemoveId = action.id\r\n            let a = {\r\n                ...state,\r\n                allNews: state.allNews.filter((user) => {\r\n                    return user.id !== userForRemoveId;\r\n                })\r\n            }\r\n\r\n\r\n\r\n            debugger\r\n            return {\r\n                ...state,\r\n\r\n                allNews: [...state.allNews, state],\r\n\r\n\r\n            }\r\n\r\n\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport default newsReducer\r\nexport const addNewsActionCreator = (id) => {\r\n\r\n    return {\r\n        type: addnews,\r\n        id: id\r\n    }\r\n};\r\n\r\n// export const UpdateNewPostActionCreator = (text) => {\r\n//\r\n//    return {\r\n//       type: updateNewTextPost,\r\n//       nextText: text\r\n//    }\r\n// };"]},"metadata":{},"sourceType":"module"}