{"ast":null,"code":"import*as axios from\"axios\";export var instance=axios.create({withCredentials:true,baseURL:'https://social-network.samuraijs.com/api/1.0/',headers:{'API-KEY':'50f1f503-9c26-452c-b6b0-8a3049400c9f'}});export var UserAPI={getUsers:function getUsers(){var currentPage=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;var pageSize=arguments.length>1&&arguments[1]!==undefined?arguments[1]:10;return instance.get(\"users?page=\".concat(currentPage,\"&count=\").concat(pageSize)).then(function(response){return response.data;});},follow:function follow(usersId){return instance.post(\"follow/\".concat(usersId));},unfollow:function unfollow(usersId){return instance.delete(\"follow/\".concat(usersId));},getProfile:function getProfile(userId){return ProfileAPI.getProfile(userId);}};export var ProfileAPI={getProfile:function getProfile(userId){return instance.get(\"profile/\"+userId);},saveProfile:function saveProfile(profile){return instance.put(\"profile\",profile);},photo:function photo(file){var formData=new FormData();formData.append('image',file);return instance.put('/profile/photo',formData,{headers:{'content-type':'multipart/form-data'}});},getStatus:function getStatus(userId){return instance.get(\"profile/status/\"+userId);},setStatus:function setStatus(status){return instance.put(\"profile/status/\",{status:status});}};export var authAPI={me:function me(){return instance.get(\"auth/me\");},login:function login(email,password){var rememberMe=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;var captcha=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;return instance.post(\"auth/login\",{email:email,password:password,rememberMe:rememberMe,captcha:captcha});},logout:function logout(){return instance.delete(\"auth/login\");}};export var securityAPI={getCaptchaUrl:function getCaptchaUrl(){return instance.get(\"security/get-captcha-url\");}};","map":{"version":3,"sources":["C:/Users/Katerina/PhpstormProjects/react-practice/src/api/api.js"],"names":["axios","instance","create","withCredentials","baseURL","headers","UserAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","usersId","post","unfollow","delete","getProfile","userId","ProfileAPI","saveProfile","profile","put","photo","file","formData","FormData","append","getStatus","setStatus","status","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl"],"mappings":"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","sourcesContent":["import * as axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {'API-KEY': '50f1f503-9c26-452c-b6b0-8a3049400c9f'}\r\n});\r\nexport const UserAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    follow(usersId) {\r\n        return instance.post(`follow/${usersId}`)\r\n\r\n    },\r\n    unfollow(usersId) {\r\n        return instance.delete(`follow/${usersId}`)\r\n\r\n    },\r\n    getProfile(userId) {\r\n        return ProfileAPI.getProfile(userId)\r\n\r\n    }\r\n}\r\nexport const ProfileAPI = {\r\n\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile)\r\n\r\n    },\r\n    photo( file){\r\n\r\n        const formData = new FormData();\r\n\r\n        formData.append('image', file);\r\n\r\n        return instance.put('/profile/photo', formData, {\r\n            headers: {\r\n                'content-type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    getStatus(userId) {\r\n\r\n        return instance.get(`profile/status/` + userId)\r\n\r\n    },\r\n    setStatus(status) {\r\n\r\n        return instance.put(`profile/status/`, {status: status})\r\n\r\n    }\r\n}\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n\r\n    login(email, password, rememberMe = false,   captcha = null) {\r\n\r\n        return instance.post(`auth/login`, {email, password, rememberMe,   captcha })\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`)\r\n    }\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}