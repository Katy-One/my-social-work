{"ast":null,"code":"import { UserAPI } from \"../api/api\";\nconst FOLLOWED = 'FOLLOWED';\nconst UNFOLLOWED = \"UNFOLLOWED\";\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USER_COUNT = 'SET_TOTAL_USER_COUNT';\nconst LOADING = 'LOADING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\nlet initialState = {\n  users: [],\n  pageSize: 20,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: false,\n  followingInProgress: false\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOWED:\n      return { ...state,\n        users: state.users.map(el => {\n          if (el.id === action.id) {\n            return { ...el,\n              followed: true\n            };\n          }\n\n          return el;\n        })\n      };\n\n    case UNFOLLOWED:\n      return { ...state,\n        users: state.users.map(el => {\n          if (el.id === action.id) {\n            return { ...el,\n              followed: false\n            };\n          }\n\n          return el;\n        })\n      };\n\n    case SET_USERS:\n      if (action.flag) {\n        return { ...state,\n          users: [...state.users, ...action.users]\n        };\n      } else {\n        return { ...state,\n          users: [...action.users]\n        };\n      }\n\n    case SET_CURRENT_PAGE:\n      return { ...state,\n        currentPage: action.currentPage\n      };\n\n    case SET_TOTAL_USER_COUNT:\n      return { ...state,\n        totalUsersCount: action.totalUsersCount\n      };\n\n    case LOADING:\n      return { ...state,\n        isFetching: action.isFetching\n      };\n\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\n      return { ...state,\n        followingInProgress: action.isProgress ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id != action.userId)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default usersReducer;\nexport const follow = id => {\n  return {\n    type: FOLLOWED,\n    id: id\n  };\n};\nexport const unfollow = id => {\n  return {\n    type: UNFOLLOWED,\n    id: id\n  };\n};\nexport const setUsers = (users, flag) => {\n  return {\n    type: SET_USERS,\n    users: users,\n    flag: flag\n  };\n};\nexport const setCurrentPage = page => {\n  return {\n    type: SET_CURRENT_PAGE,\n    currentPage: page\n  };\n};\nexport const setTotalUsersCount = count => {\n  return {\n    type: SET_TOTAL_USER_COUNT,\n    totalUsersCount: count\n  };\n};\nexport const setIsFetching = load => {\n  return {\n    type: LOADING,\n    isFetching: load\n  };\n};\nexport const isToggleProgress = (flag, userId) => {\n  return {\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\n    isProgress: flag,\n    userId: userId\n  };\n};\nexport const getUsers = (currentPage, pageSize) => {\n  return dispatch => {\n    dispatch(setCurrentPage(currentPage));\n    dispatch(setIsFetching(true));\n    dispatch(isToggleProgress(true));\n    UserAPI.getUsers(currentPage, pageSize).then(data => {\n      dispatch(setIsFetching(false));\n      dispatch(setUsers(data.items));\n      dispatch(setTotalUsersCount(data.totalCount));\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Katerina/PhpstormProjects/react-practice/src/redux/users-reducer.js"],"names":["UserAPI","FOLLOWED","UNFOLLOWED","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USER_COUNT","LOADING","TOGGLE_IS_FOLLOWING_PROGRESS","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","usersReducer","state","action","type","map","el","id","followed","flag","isProgress","userId","filter","follow","unfollow","setUsers","setCurrentPage","page","setTotalUsersCount","count","setIsFetching","load","isToggleProgress","getUsers","dispatch","then","data","items","totalCount"],"mappings":"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","sourcesContent":["import {UserAPI} from \"../api/api\";\r\n\r\nconst FOLLOWED = 'FOLLOWED'\r\nconst UNFOLLOWED = \"UNFOLLOWED\"\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USER_COUNT = 'SET_TOTAL_USER_COUNT'\r\nconst LOADING = 'LOADING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 20,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: false\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case FOLLOWED:\r\n\r\n            return {\r\n                ...state,\r\n\r\n                users: state.users.map((el) => {\r\n                    if (el.id === action.id) {\r\n                        return {...el, followed: true}\r\n                    }\r\n                    return el\r\n                })\r\n            }\r\n        case UNFOLLOWED:\r\n            return {\r\n                ...state,\r\n                users: state.users.map((el) => {\r\n                    if (el.id === action.id) {\r\n                        return {...el, followed: false}\r\n                    }\r\n                    return el\r\n                })\r\n            }\r\n        case SET_USERS:\r\n\r\n            if (action.flag) {\r\n                return {\r\n\r\n                    ...state, users: [...state.users, ...action.users]\r\n                }\r\n            } else {\r\n                return {\r\n\r\n                    ...state, users: [...action.users]\r\n                }\r\n            }\r\n\r\n        case SET_CURRENT_PAGE:\r\n\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage,\r\n            }\r\n        case SET_TOTAL_USER_COUNT:\r\n\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalUsersCount,\r\n            }\r\n        case LOADING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n\r\n            }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isProgress\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default usersReducer\r\nexport const follow = (id) => {\r\n    return {type: FOLLOWED, id: id}\r\n};\r\nexport const unfollow = (id) => {\r\n    return {type: UNFOLLOWED, id: id}\r\n};\r\nexport const setUsers = (users, flag) => {\r\n    return {type: SET_USERS, users: users, flag: flag}\r\n};\r\nexport const setCurrentPage = (page) => {\r\n\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        currentPage: page\r\n    }\r\n};\r\nexport const setTotalUsersCount = (count) => {\r\n\r\n    return {\r\n        type: SET_TOTAL_USER_COUNT,\r\n        totalUsersCount: count,\r\n\r\n    }\r\n};\r\nexport const setIsFetching = (load) => {\r\n\r\n    return {\r\n        type: LOADING,\r\n        isFetching: load\r\n    }\r\n};\r\nexport const isToggleProgress = (flag, userId) => {\r\n    return {type: TOGGLE_IS_FOLLOWING_PROGRESS, isProgress: flag, userId: userId}\r\n}\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(setCurrentPage(currentPage))\r\n        dispatch(setIsFetching(true))\r\n        dispatch(isToggleProgress(true))\r\n\r\n        UserAPI.getUsers(currentPage, pageSize).then(data => {\r\n            dispatch(setIsFetching(false))\r\n            dispatch(setUsers(data.items))\r\n            dispatch(setTotalUsersCount(data.totalCount))\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}