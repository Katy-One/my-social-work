{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Katerina\\\\PhpstormProjects\\\\react-practice\\\\src\\\\components\\\\Dialogs\\\\Dialogs.js\";\nimport React from 'react';\nimport s from './Dialogs.module.css';\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport { addMessageActionCreator, UpdateMessagePostActionCreator } from \"../../redux/message-reducer\";\nimport { Field, reduxForm } from 'redux-form';\nimport { TextArea } from \"../common/FormControls/FormControls\";\nimport { maxLength10, required } from \"../../utils/validator/validator\";\n\nconst DialogsForm = props => {\n  const {\n    handleSubmit,\n    load,\n    pristine,\n    reset,\n    submitting\n  } = props;\n  return React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Field, {\n    placeholder: 'post text',\n    name: 'post_text',\n    component: TextArea,\n    validate: [required, maxLength10],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    disabled: props.pristine || props.submitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Add post\"));\n};\n\nconst ReduxDialogsForm = reduxForm({\n  // a unique name for the form\n  form: 'login'\n})(DialogsForm);\n\nconst DialogItem = props => {\n  console.log(path);\n  let path = '/dialogs/' + props.id;\n  return React.createElement(NavLink, {\n    to: path,\n    className: s.dialog,\n    activeClassName: s.active,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, props.name);\n};\n\nconst Message = props => {\n  return React.createElement(\"div\", {\n    className: \"message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, props.message);\n};\n\nconst Dialogs = props => {\n  console.log(props); //let newMessageElement = React.createRef()\n  // const addMessage = () => {\n  //     props.addMessageActionCreator()\n  // }\n  // let onMessageChange = () => {\n  //\n  //     //let text = newMessageElement.current.value;\n  //     console.log(text)\n  //     props.UpdateMessagePostActionCreator(text)\n  // }\n\n  let addSubmit = value => {\n    props.addMessageActionCreator(value.post_text);\n  };\n\n  return React.createElement(\"div\", {\n    className: s.dialogs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: s.dialogsItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, props.dialogs.map((el, i) => React.createElement(DialogItem, {\n    name: el.name,\n    id: el.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, props.message.map((el, i) => React.createElement(Message, {\n    message: el.message,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }))), React.createElement(ReduxDialogsForm, {\n    onSubmit: addSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }));\n};\n\nexport default Dialogs;","map":{"version":3,"sources":["C:/Users/Katerina/PhpstormProjects/react-practice/src/components/Dialogs/Dialogs.js"],"names":["React","s","NavLink","Redirect","addMessageActionCreator","UpdateMessagePostActionCreator","Field","reduxForm","TextArea","maxLength10","required","DialogsForm","props","handleSubmit","load","pristine","reset","submitting","ReduxDialogsForm","form","DialogItem","console","log","path","id","dialog","active","name","Message","message","Dialogs","addSubmit","value","post_text","dialogs","dialogsItem","map","el","i"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {addMessageActionCreator, UpdateMessagePostActionCreator} from \"../../redux/message-reducer\";\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {TextArea} from \"../common/FormControls/FormControls\";\r\nimport {maxLength10, required} from \"../../utils/validator/validator\";\r\n\r\n\r\n\r\nconst DialogsForm = (props) => {\r\n    const { handleSubmit, load, pristine, reset, submitting } = props\r\n    return (\r\n\r\n        <form onSubmit={props.handleSubmit}>\r\n\r\n\r\n            <div>\r\n                <Field placeholder={'post text'} name={'post_text'} component={TextArea}  validate={[required, maxLength10]} />\r\n            </div>\r\n\r\n\r\n            <button   disabled={props.pristine || props.submitting} >Add post</button>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst ReduxDialogsForm = reduxForm({\r\n    // a unique name for the form\r\n    form: 'login'\r\n})(DialogsForm)\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    console.log(path)\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <NavLink to={path} className={s.dialog} activeClassName={s.active}>{props.name}</NavLink>\r\n    )\r\n}\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className=\"message\">{props.message}</div>\r\n    )\r\n}\r\nconst Dialogs = (props) => {\r\n    console.log(props)\r\n    //let newMessageElement = React.createRef()\r\n    // const addMessage = () => {\r\n    //     props.addMessageActionCreator()\r\n    // }\r\n    // let onMessageChange = () => {\r\n    //\r\n    //     //let text = newMessageElement.current.value;\r\n    //     console.log(text)\r\n    //     props.UpdateMessagePostActionCreator(text)\r\n    // }\r\nlet addSubmit=(value)=>{\r\n\r\n    props.addMessageActionCreator(value.post_text)\r\n}\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItem}>\r\n                {props.dialogs.map((el, i) =>\r\n                    <DialogItem name={el.name} id={el.id}/>\r\n                )}\r\n            </div>\r\n            <div>\r\n                {props.message.map((el, i) =>\r\n                    <Message message={el.message}/>\r\n                )}\r\n            </div>\r\n            <ReduxDialogsForm onSubmit={addSubmit}/>\r\n            {/*<div>*/}\r\n            {/*    <textarea onChange={onMessageChange} ref={newMessageElement} value={props.textMessage}/>*/}\r\n            {/*    <button onClick={addMessage}>Add Message</button>*/}\r\n            {/*</div>*/}\r\n        </div>)\r\n}\r\n\r\n\r\nexport default Dialogs\r\n"]},"metadata":{},"sourceType":"module"}