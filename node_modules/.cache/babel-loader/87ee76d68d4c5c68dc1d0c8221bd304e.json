{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Katerina\\\\PhpstormProjects\\\\react-practice\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Katerina\\\\PhpstormProjects\\\\react-practice\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\Katerina\\\\PhpstormProjects\\\\react-practice\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\Katerina\\\\PhpstormProjects\\\\react-practice\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\Katerina\\\\PhpstormProjects\\\\react-practice\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from\"react\";import{connect}from\"react-redux\";import{following,getUsers,isToggleProgress,loadingUsers,setTotalUsersCount,unfollowing}from\"../../redux/users-reducer\";import*as axios from\"axios\";import Users from\"./Users\";import Preloader from\"../common/preloader/Preloader\";import{UserAPI}from\"../../api/api\";import{getCurrentPage,getFollowingInProgress,getIsFetching,getSizeSelector,gettotalUsersCount,getUsersSelector}from\"../../redux/users-selectors\";var UsersContainer=/*#__PURE__*/function(_React$Component){_inherits(UsersContainer,_React$Component);function UsersContainer(props){var _this;_classCallCheck(this,UsersContainer);_this=_possibleConstructorReturn(this,_getPrototypeOf(UsersContainer).call(this,props));_this.changePage=function(){if(_this.page1>0){_this.page1+=1;_this.props.getUsers(_this.page1,_this.props.pageSize);}};_this.changePagePrev=function(){_this.page1-=1;if(_this.page1>=1){_this.props.getUsers(_this.page1,_this.props.pageSize);}if(_this.page1<=0){_this.page1=1;}};_this.loadUsers=function(flag,page){debugger;page=_this.props.currentPage;page+=1;console.log(page);_this.props.loadingUsers(page,flag,_this.props.pageSize);};_this.setCurrentPage2=function(page){_this.props.getUsers(page,_this.props.pageSize);// this.props.setCurrentPage(page);\n// this.props.setIsFetching(true)\n// UserAPI.getUsers(page, this.props.pageSize).then(data => {\n//     this.props.setIsFetching(false)\n//     this.props.setUsers(data.items)\n// })\n};_this.isFollowed=function(page){_this.props.getUsers(page,_this.props.pageSize);// this.props.setCurrentPage(page);\n// this.props.setIsFetching(true)\n// UserAPI.getUsers(page, this.props.pageSize).then(data => {\n//     this.props.setIsFetching(false)\n//     this.props.setUsers(data.items)\n// })\n};_this.isFollow=function(page){_this.props.getUsers(page,_this.props.pageSize);// this.props.setCurrentPage(page);\n// this.props.setIsFetching(true)\n// UserAPI.getUsers(page, this.props.pageSize).then(data => {\n//     this.props.setIsFetching(false)\n//     this.props.setUsers(data.items)\n// })\n};console.log(props);_this.page1=1;return _this;}_createClass(UsersContainer,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.getUsers(this.props.currentPage,this.props.pageSize);// this.props.getUsers(this.props.currentPage, this.props.pageSize).then(response => {\n//     return response.data\n// })\nconsole.log(this.props);}},{key:\"render\",value:function render(){return React.createElement(React.Fragment,null,this.props.isFetching?React.createElement(Preloader,null):null,React.createElement(Users,{totalUsersCount:this.props.totalUsersCount,pageSize:this.props.pageSize,users:this.props.users,setCurrentPage:this.setCurrentPage2,following:this.props.following,unfollowing:this.props.unfollowing,loadUsers:this.loadUsers,currentPage:this.props.currentPage,followingInProgress:this.props.followingInProgress,isToggleProgress:this.props.isToggleProgress,changePage:this.changePage,changePagePrev:this.changePagePrev}));}}]);return UsersContainer;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{users:getUsersSelector(state),pageSize:getSizeSelector(state),totalUsersCount:gettotalUsersCount(state),currentPage:getCurrentPage(state),isFetching:getIsFetching(state),followingInProgress:getFollowingInProgress(state)};};export default connect(mapStateToProps,{setTotalUsersCount:setTotalUsersCount,getUsers:getUsers,isToggleProgress:isToggleProgress,following:following,unfollowing:unfollowing,loadingUsers:loadingUsers})(UsersContainer);","map":{"version":3,"sources":["C:/Users/Katerina/PhpstormProjects/react-practice/src/components/Users/UsersContainer.js"],"names":["React","connect","following","getUsers","isToggleProgress","loadingUsers","setTotalUsersCount","unfollowing","axios","Users","Preloader","UserAPI","getCurrentPage","getFollowingInProgress","getIsFetching","getSizeSelector","gettotalUsersCount","getUsersSelector","UsersContainer","props","changePage","page1","pageSize","changePagePrev","loadUsers","flag","page","currentPage","console","log","setCurrentPage2","isFollowed","isFollow","isFetching","totalUsersCount","users","followingInProgress","Component","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {\r\n    following, getUsers, isToggleProgress, loadingUsers,\r\n    setTotalUsersCount,\r\n    unfollowing\r\n} from \"../../redux/users-reducer\";\r\n\r\nimport * as axios from \"axios\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/preloader/Preloader\";\r\nimport {UserAPI} from \"../../api/api\";\r\nimport {\r\n    getCurrentPage, getFollowingInProgress,\r\n    getIsFetching,\r\n    getSizeSelector,\r\n    gettotalUsersCount,\r\n    getUsersSelector\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(props)\r\n        this.page1 = 1\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n        // this.props.getUsers(this.props.currentPage, this.props.pageSize).then(response => {\r\n        //     return response.data\r\n        // })\r\n        console.log(this.props)\r\n    }\r\n    changePage = () => {\r\n\r\n        if(this.page1 >0){\r\n            this.page1 += 1\r\n            this.props.getUsers(this.page1, this.props.pageSize)\r\n        }\r\n\r\n\r\n\r\n    }\r\n    changePagePrev = () => {\r\n        this.page1 -= 1\r\n        if(this.page1 >=1){\r\n            this.props.getUsers(this.page1, this.props.pageSize)\r\n        }\r\n        if(this.page1 <= 0){\r\n            this.page1 = 1\r\n        }\r\n    }\r\n    loadUsers = (flag, page) => {\r\n        debugger\r\n        page = this.props.currentPage;\r\n        page += 1;\r\n\r\n        console.log(page);\r\n        this.props.loadingUsers(page, flag, this.props.pageSize)\r\n\r\n    }\r\n\r\n    setCurrentPage2 = (page) => {\r\n        this.props.getUsers(page, this.props.pageSize)\r\n        // this.props.setCurrentPage(page);\r\n        // this.props.setIsFetching(true)\r\n        // UserAPI.getUsers(page, this.props.pageSize).then(data => {\r\n        //     this.props.setIsFetching(false)\r\n        //     this.props.setUsers(data.items)\r\n        // })\r\n\r\n\r\n    }\r\n    isFollowed = (page) => {\r\n        this.props.getUsers(page, this.props.pageSize)\r\n        // this.props.setCurrentPage(page);\r\n        // this.props.setIsFetching(true)\r\n        // UserAPI.getUsers(page, this.props.pageSize).then(data => {\r\n        //     this.props.setIsFetching(false)\r\n        //     this.props.setUsers(data.items)\r\n        // })\r\n\r\n\r\n    }\r\n    isFollow = (page) => {\r\n        this.props.getUsers(page, this.props.pageSize)\r\n        // this.props.setCurrentPage(page);\r\n        // this.props.setIsFetching(true)\r\n        // UserAPI.getUsers(page, this.props.pageSize).then(data => {\r\n        //     this.props.setIsFetching(false)\r\n        //     this.props.setUsers(data.items)\r\n        // })\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   users={this.props.users}\r\n                   setCurrentPage={this.setCurrentPage2}\r\n                   following={this.props.following}\r\n                   unfollowing={this.props.unfollowing}\r\n                   loadUsers={this.loadUsers}\r\n                   currentPage={this.props.currentPage}\r\n                   followingInProgress={this.props.followingInProgress}\r\n                   isToggleProgress={this.props.isToggleProgress}\r\n                   changePage={this.changePage}\r\n                   changePagePrev={this.changePagePrev}/>\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        users:getUsersSelector (state) ,\r\n        pageSize: getSizeSelector(state),\r\n        totalUsersCount: gettotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n    setTotalUsersCount,\r\n    getUsers,\r\n    isToggleProgress,\r\n    following,\r\n    unfollowing,\r\n    loadingUsers\r\n\r\n})(UsersContainer)\r\n"]},"metadata":{},"sourceType":"module"}