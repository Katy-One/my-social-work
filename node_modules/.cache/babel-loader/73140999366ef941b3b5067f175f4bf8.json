{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Katerina\\\\PhpstormProjects\\\\react-practice\\\\src\\\\components\\\\Users\\\\UsersContainer.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { followedAC, setCurrentPageAC, setIsFetchingAC, setTotalUsersCountAC, setUsersAC, unfollowedAC } from \"../../redux/users-reducer\";\nimport preloader from \"../../images/loading.svg\";\nimport s from \"./Users.module.css\";\nimport * as axios from \"axios\";\nimport Users from \"./Users\";\n\nclass UsersContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.loadUsers = (page, flag) => {\n      page = this.props.currentPage;\n      page += 1;\n      this.props.setCurrentPage(page);\n      console.log(page);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${page}&count=${this.props.pageSize}`).then(response => {\n        this.props.setUsers(response.data.items, flag);\n      });\n    };\n\n    this.setCurrentPage = page => {\n      this.props.setCurrentPage(page);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${page}&count=${this.props.pageSize}`).then(response => {\n        this.props.setUsers(response.data.items);\n      });\n    };\n\n    console.log(props);\n  }\n\n  componentDidMount() {\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n      console.log(response.data.items);\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n    console.log(this.props);\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.props.isFetching ? React.createElement(\"img\", {\n      className: s.loading,\n      src: preloader,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }) : null, React.createElement(Users, {\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      users: this.props.users,\n      setCurrentPage: this.setCurrentPage,\n      unfollow: this.props.unfollow,\n      follow: this.props.follow,\n      loadUsers: this.loadUsers,\n      currentPage: this.props.currentPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    follow: id => {\n      dispatch(followedAC(id));\n    },\n    unfollow: id => {\n      dispatch(unfollowedAC(id));\n    },\n    setUsers: (users, flag) => {\n      dispatch(setUsersAC(users, flag));\n    },\n    setTotalUsersCount: count => {\n      dispatch(setTotalUsersCountAC(count));\n    },\n    setCurrentPage: page => {\n      dispatch(setCurrentPageAC(page));\n    },\n    setIsFetching: load => {\n      dispatch(setIsFetchingAC(load));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);","map":{"version":3,"sources":["C:/Users/Katerina/PhpstormProjects/react-practice/src/components/Users/UsersContainer.js"],"names":["React","connect","followedAC","setCurrentPageAC","setIsFetchingAC","setTotalUsersCountAC","setUsersAC","unfollowedAC","s","axios","Users","UsersContainer","Component","constructor","props","loadUsers","page","flag","currentPage","setCurrentPage","console","log","get","pageSize","then","response","setUsers","data","items","componentDidMount","setTotalUsersCount","totalCount","render","isFetching","loading","preloader","totalUsersCount","users","unfollow","follow","mapStateToProps","state","usersPage","mapDispatchToProps","dispatch","id","count","setIsFetching","load"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {\r\n    followedAC,\r\n    setCurrentPageAC,\r\n    setIsFetchingAC,\r\n    setTotalUsersCountAC,\r\n    setUsersAC,\r\n    unfollowedAC\r\n} from \"../../redux/users-reducer\";\r\nimport preloader from \"../../images/loading.svg\"\r\nimport s from \"./Users.module.css\"\r\nimport * as axios from \"axios\";\r\nimport Users from \"./Users\";\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(props)\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\r\n            console.log(response.data.items)\r\n            this.props.setUsers(response.data.items)\r\n            this.props.setTotalUsersCount(response.data.totalCount)\r\n        })\r\n        console.log(this.props)\r\n    }\r\n\r\n    loadUsers = (page, flag) => {\r\n        page = this.props.currentPage;\r\n        page += 1;\r\n        this.props.setCurrentPage(page);\r\n        console.log(page);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${page}&count=${this.props.pageSize}`).then(response => {\r\n            this.props.setUsers(response.data.items, flag);\r\n        })\r\n    }\r\n\r\n    setCurrentPage = (page) => {\r\n\r\n        this.props.setCurrentPage(page);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${page}&count=${this.props.pageSize}`).then(response => {\r\n            this.props.setUsers(response.data.items)\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <img className={s.loading} src={preloader} alt=\"\"/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   users={this.props.users}\r\n                   setCurrentPage={this.setCurrentPage}\r\n                   unfollow={this.props.unfollow}\r\n                   follow={this.props.follow}\r\n                   loadUsers={this.loadUsers}\r\n                   currentPage={this.props.currentPage}/>\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n    };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (id) => {\r\n            dispatch(followedAC(id))\r\n        },\r\n        unfollow: (id) => {\r\n            dispatch(unfollowedAC(id))\r\n        },\r\n        setUsers: (users, flag) => {\r\n            dispatch(setUsersAC(users, flag))\r\n        },\r\n        setTotalUsersCount: (count) => {\r\n            dispatch(setTotalUsersCountAC(count))\r\n        },\r\n        setCurrentPage: (page) => {\r\n            dispatch(setCurrentPageAC(page))\r\n        },\r\n        setIsFetching: (load) => {\r\n            dispatch(setIsFetchingAC(load))\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer)\r\n"]},"metadata":{},"sourceType":"module"}