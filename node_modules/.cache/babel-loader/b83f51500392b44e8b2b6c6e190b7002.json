{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Katerina\\\\PhpstormProjects\\\\react-practice\\\\src\\\\components\\\\Profile\\\\MyPosts\\\\MyPosts.js\";\nimport React from \"react\";\nimport MyPost from './MyPost/MyPost';\nimport { Field, reduxForm } from 'redux-form';\n\nconst MyPostForm = props => {\n  const {\n    handleSubmit,\n    load,\n    pristine,\n    reset,\n    submitting\n  } = props;\n  const {\n    createRecord,\n    resetForm\n  } = props;\n  return createRecord(data).then(() => {\n    resetForm(); // do other success stuff\n  });\n  return React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Field, {\n    placeholder: 'post text',\n    name: 'post_text',\n    component: \"textarea\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    disabled: props.pristine || props.submitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Add post\"));\n};\n\nconst ReduxMyPostForm = reduxForm({\n  // a unique name for the form\n  form: 'login'\n})(MyPostForm);\n\nconst MyPosts = props => {\n  console.log(props);\n  let arr_post = props.posts.map((el, i) => React.createElement(MyPost, {\n    massage: el.massage,\n    id: i + 1,\n    like: el.like,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }));\n  let newPostElement = React.createRef();\n\n  const addPost = () => {};\n\n  const onPostChange = () => {\n    let text = newPostElement.current.value;\n  };\n\n  let submitPostForm = data => {\n    console.log(data);\n    let id = props.posts.length + 1;\n    let text = data.post_text;\n    props.addPostText(id, text);\n    props.updateNewPostText(text);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \" My post\")), React.createElement(ReduxMyPostForm, {\n    onSubmit: submitPostForm,\n    text: props.NewPostText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, arr_post));\n};\n\nexport default MyPosts;","map":{"version":3,"sources":["C:/Users/Katerina/PhpstormProjects/react-practice/src/components/Profile/MyPosts/MyPosts.js"],"names":["React","MyPost","Field","reduxForm","MyPostForm","props","handleSubmit","load","pristine","reset","submitting","createRecord","resetForm","data","then","ReduxMyPostForm","form","MyPosts","console","log","arr_post","posts","map","el","i","massage","like","newPostElement","createRef","addPost","onPostChange","text","current","value","submitPostForm","id","length","post_text","addPostText","updateNewPostText","NewPostText"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAAQC,KAAR,EAAeC,SAAf,QAA+B,YAA/B;;AAIA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC1B,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,IAAhB;AAAsBC,IAAAA,QAAtB;AAAgCC,IAAAA,KAAhC;AAAuCC,IAAAA;AAAvC,MAAsDL,KAA5D;AACA,QAAM;AAACM,IAAAA,YAAD;AAAeC,IAAAA;AAAf,MAA4BP,KAAlC;AACA,SAAOM,YAAY,CAACE,IAAD,CAAZ,CAAmBC,IAAnB,CAAwB,MAAM;AACjCF,IAAAA,SAAS,GADwB,CAEjC;AAEH,GAJM,CAAP;AAKA,SAEI;AAAM,IAAA,QAAQ,EAAEP,KAAK,CAACC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAE,WAApB;AAAiC,IAAA,IAAI,EAAE,WAAvC;AAAoD,IAAA,SAAS,EAAE,UAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAHJ,EAQI;AAAU,IAAA,QAAQ,EAAED,KAAK,CAACG,QAAN,IAAkBH,KAAK,CAACK,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ,CAFJ;AAcH,CAtBD;;AAyBA,MAAMK,eAAe,GAAGZ,SAAS,CAAC;AAC9B;AACAa,EAAAA,IAAI,EAAE;AAFwB,CAAD,CAAT,CAGrBZ,UAHqB,CAAxB;;AAIA,MAAMa,OAAO,GAAIZ,KAAD,IAAW;AACvBa,EAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AACA,MAAIe,QAAQ,GAAGf,KAAK,CAACgB,KAAN,CAAYC,GAAZ,CAAgB,CAACC,EAAD,EAAKC,CAAL,KAAW,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAED,EAAE,CAACE,OAApB;AAA6B,IAAA,EAAE,EAAED,CAAC,GAAG,CAArC;AAAwC,IAAA,IAAI,EAAED,EAAE,CAACG,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA3B,CAAf;AACA,MAAIC,cAAc,GAAG3B,KAAK,CAAC4B,SAAN,EAArB;;AACA,QAAMC,OAAO,GAAG,MAAM,CAGrB,CAHD;;AAIA,QAAMC,YAAY,GAAG,MAAM;AAEvB,QAAIC,IAAI,GAAGJ,cAAc,CAACK,OAAf,CAAuBC,KAAlC;AAGH,GALD;;AAMA,MAAIC,cAAc,GAAIrB,IAAD,IAAU;AAC3BK,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACA,QAAIsB,EAAE,GAAG9B,KAAK,CAACgB,KAAN,CAAYe,MAAZ,GAAqB,CAA9B;AACA,QAAIL,IAAI,GAAGlB,IAAI,CAACwB,SAAhB;AAEAhC,IAAAA,KAAK,CAACiC,WAAN,CAAkBH,EAAlB,EAAsBJ,IAAtB;AAEA1B,IAAAA,KAAK,CAACkC,iBAAN,CAAwBR,IAAxB;AACH,GARD;;AASA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CADG,EAOH,oBAAE,eAAF;AAAkB,IAAA,QAAQ,EAAEG,cAA5B;AAA4C,IAAA,IAAI,EAAE7B,KAAK,CAACmC,WAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPG,EAQH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKpB,QADL,CARG,CAAP;AAYH,CAnCD;;AAoCA,eAAeH,OAAf","sourcesContent":["import React from \"react\";\r\nimport MyPost from './MyPost/MyPost'\r\nimport {Field, reduxForm} from 'redux-form'\r\n\r\n\r\n\r\nconst MyPostForm = (props) => {\r\n    const { handleSubmit, load, pristine, reset, submitting } = props\r\n    const {createRecord, resetForm} = props;\r\n    return createRecord(data).then(() => {\r\n        resetForm();\r\n        // do other success stuff\r\n\r\n    });\r\n    return (\r\n\r\n        <form onSubmit={props.handleSubmit}>\r\n\r\n\r\n            <div>\r\n                <Field placeholder={'post text'} name={'post_text'} component={\"textarea\"}/>\r\n            </div>\r\n\r\n\r\n            <button   disabled={props.pristine || props.submitting} >Add post</button>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst ReduxMyPostForm = reduxForm({\r\n    // a unique name for the form\r\n    form: 'login'\r\n})(MyPostForm)\r\nconst MyPosts = (props) => {\r\n    console.log(props)\r\n    let arr_post = props.posts.map((el, i) => <MyPost massage={el.massage} id={i + 1} like={el.like}/>);\r\n    let newPostElement = React.createRef()\r\n    const addPost = () => {\r\n\r\n\r\n    }\r\n    const onPostChange = () => {\r\n\r\n        let text = newPostElement.current.value;\r\n\r\n\r\n    }\r\n    let submitPostForm = (data) => {\r\n        console.log(data)\r\n        let id = props.posts.length + 1;\r\n        let text = data.post_text\r\n\r\n        props.addPostText(id, text)\r\n\r\n        props.updateNewPostText(text)\r\n    }\r\n    return <div>\r\n        <div>\r\n            <h3> My post</h3>\r\n            {/*<textarea onChange={onPostChange} ref={newPostElement} value={props.newPostText}/>*/}\r\n            {/*<button onClick={addPost}>add button</button>*/}\r\n\r\n        </div>\r\n        < ReduxMyPostForm onSubmit={submitPostForm} text={props.NewPostText}/>\r\n        <div>\r\n            {arr_post}\r\n        </div>\r\n    </div>\r\n}\r\nexport default MyPosts"]},"metadata":{},"sourceType":"module"}