{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Katerina\\\\PhpstormProjects\\\\react-practice\\\\src\\\\components\\\\Dialogs\\\\Dialogs.js\";\nimport React, { useState } from 'react';\nimport s from './Dialogs.module.css';\nimport { NavLink, Redirect, Route } from \"react-router-dom\";\nimport { addMessageActionCreator, UpdateMessagePostActionCreator } from \"../../redux/message-reducer\";\nimport { Field, reduxForm } from 'redux-form';\nimport { TextArea } from \"../common/FormControls/FormControls\";\nimport { maxLength10, required } from \"../../utils/validator/validator\";\nimport NewsContainer from \"../News/NewsContainer\";\n\nconst DialogsForm = props => {\n  const {\n    handleSubmit,\n    load,\n    pristine,\n    reset,\n    submitting\n  } = props;\n  return React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Field, {\n    placeholder: 'post text',\n    name: 'post_text',\n    component: TextArea,\n    validate: [required, maxLength10],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    disabled: props.pristine || props.submitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Add post\"));\n};\n\nconst ReduxDialogsForm = reduxForm({\n  // a unique name for the form\n  form: 'login'\n})(DialogsForm);\n\nconst DialogItem = props => {\n  const UserMessage = e => {\n    props.setState(true);\n  };\n\n  let path = '/dialogs/' + props.id;\n  return (// <Route path='/news' render={() => <NewsContainer/>}/>\n    React.createElement(NavLink, {\n      to: path,\n      className: s.dialog,\n      activeClassName: s.active,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, props.name)\n  );\n};\n\nconst Message = props => {\n  return React.createElement(\"div\", {\n    className: \"message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, props.message);\n};\n\nconst Dialogs = props => {\n  console.log();\n  let id = props.match.params.id;\n  console.log(id);\n  let [state, setState] = useState(false);\n\n  let addSubmit = value => {\n    props.addMessageActionCreator(value.post_text);\n  };\n\n  return React.createElement(\"div\", {\n    className: s.dialogs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, id ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(ReduxDialogsForm, {\n    onSubmit: addSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, props.message.map((el, i) => {\n    // if (id == el.id) {\n    //     return\n    // }\n    return React.createElement(Message, {\n      message: el.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    });\n  }))) : React.createElement(\"div\", {\n    className: s.dialogsItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, props.dialogs.map((el, i) => React.createElement(DialogItem, {\n    setState: setState,\n    name: el.name,\n    id: el.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }))));\n};\n\nexport default Dialogs;","map":{"version":3,"sources":["C:/Users/Katerina/PhpstormProjects/react-practice/src/components/Dialogs/Dialogs.js"],"names":["React","useState","s","NavLink","Redirect","Route","addMessageActionCreator","UpdateMessagePostActionCreator","Field","reduxForm","TextArea","maxLength10","required","NewsContainer","DialogsForm","props","handleSubmit","load","pristine","reset","submitting","ReduxDialogsForm","form","DialogItem","UserMessage","e","setState","path","id","dialog","active","name","Message","message","Dialogs","console","log","match","params","state","addSubmit","value","post_text","dialogs","map","el","i","dialogsItem"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,CAAP,MAAc,sBAAd;AACA,SAAQC,OAAR,EAAiBC,QAAjB,EAA2BC,KAA3B,QAAuC,kBAAvC;AACA,SAAQC,uBAAR,EAAiCC,8BAAjC,QAAsE,6BAAtE;AACA,SAAQC,KAAR,EAAeC,SAAf,QAA+B,YAA/B;AACA,SAAQC,QAAR,QAAuB,qCAAvB;AACA,SAAQC,WAAR,EAAqBC,QAArB,QAAoC,iCAApC;AACA,OAAOC,aAAP,MAA0B,uBAA1B;;AAGA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC3B,QAAM;AAACC,IAAAA,YAAD;AAAeC,IAAAA,IAAf;AAAqBC,IAAAA,QAArB;AAA+BC,IAAAA,KAA/B;AAAsCC,IAAAA;AAAtC,MAAoDL,KAA1D;AACA,SAEI;AAAM,IAAA,QAAQ,EAAEA,KAAK,CAACC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAE,WAApB;AAAiC,IAAA,IAAI,EAAE,WAAvC;AAAoD,IAAA,SAAS,EAAEN,QAA/D;AACO,IAAA,QAAQ,EAAE,CAACE,QAAD,EAAWD,WAAX,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAHJ,EASI;AAAQ,IAAA,QAAQ,EAAEI,KAAK,CAACG,QAAN,IAAkBH,KAAK,CAACK,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ,CAFJ;AAeH,CAjBD;;AAoBA,MAAMC,gBAAgB,GAAGZ,SAAS,CAAC;AAC/B;AACAa,EAAAA,IAAI,EAAE;AAFyB,CAAD,CAAT,CAGtBR,WAHsB,CAAzB;;AAKA,MAAMS,UAAU,GAAIR,KAAD,IAAW;AAC1B,QAAMS,WAAW,GAAIC,CAAD,IAAO;AACvBV,IAAAA,KAAK,CAACW,QAAN,CAAe,IAAf;AACH,GAFD;;AAIA,MAAIC,IAAI,GAAG,cAAcZ,KAAK,CAACa,EAA/B;AACA,SACI;AACA,wBAAC,OAAD;AAAS,MAAA,EAAE,EAAED,IAAb;AAAmB,MAAA,SAAS,EAAEzB,CAAC,CAAC2B,MAAhC;AAAwC,MAAA,eAAe,EAAE3B,CAAC,CAAC4B,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoEf,KAAK,CAACgB,IAA1E;AAFJ;AAKH,CAXD;;AAaA,MAAMC,OAAO,GAAIjB,KAAD,IAAW;AACvB,SACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BA,KAAK,CAACkB,OAAhC,CADJ;AAGH,CAJD;;AAKA,MAAMC,OAAO,GAAInB,KAAD,IAAW;AACvBoB,EAAAA,OAAO,CAACC,GAAR;AACA,MAAIR,EAAE,GAAGb,KAAK,CAACsB,KAAN,CAAYC,MAAZ,CAAmBV,EAA5B;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYR,EAAZ;AACA,MAAI,CAACW,KAAD,EAAQb,QAAR,IAAoBzB,QAAQ,CAAC,KAAD,CAAhC;;AACA,MAAIuC,SAAS,GAAIC,KAAD,IAAW;AAEvB1B,IAAAA,KAAK,CAACT,uBAAN,CAA8BmC,KAAK,CAACC,SAApC;AACH,GAHD;;AAKA,SACI;AAAK,IAAA,SAAS,EAAExC,CAAC,CAACyC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKf,EAAE,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAkB,IAAA,QAAQ,EAAEY,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKzB,KAAK,CAACkB,OAAN,CAAcW,GAAd,CAAkB,CAACC,EAAD,EAAKC,CAAL,KAAW;AAC1B;AACA;AACA;AACF,WAAQ,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAED,EAAE,CAACZ,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AACD,GALA,CADL,CAFF,CAAH,GAWC;AAAK,IAAA,SAAS,EAAE/B,CAAC,CAAC6C,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKhC,KAAK,CAAC4B,OAAN,CAAcC,GAAd,CAAkB,CAACC,EAAD,EAAKC,CAAL,KACf,oBAAC,UAAD;AAAY,IAAA,QAAQ,EAAEpB,QAAtB;AAAgC,IAAA,IAAI,EAAEmB,EAAE,CAACd,IAAzC;AAA+C,IAAA,EAAE,EAAEc,EAAE,CAACjB,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADL,CAZR,CADJ;AAyBH,CAnCD;;AAsCA,eAAeM,OAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport {NavLink, Redirect, Route} from \"react-router-dom\";\r\nimport {addMessageActionCreator, UpdateMessagePostActionCreator} from \"../../redux/message-reducer\";\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {TextArea} from \"../common/FormControls/FormControls\";\r\nimport {maxLength10, required} from \"../../utils/validator/validator\";\r\nimport NewsContainer from \"../News/NewsContainer\";\r\n\r\n\r\nconst DialogsForm = (props) => {\r\n    const {handleSubmit, load, pristine, reset, submitting} = props\r\n    return (\r\n\r\n        <form onSubmit={props.handleSubmit}>\r\n\r\n\r\n            <div>\r\n                <Field placeholder={'post text'} name={'post_text'} component={TextArea}\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n\r\n\r\n            <button disabled={props.pristine || props.submitting}>Add post</button>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst ReduxDialogsForm = reduxForm({\r\n    // a unique name for the form\r\n    form: 'login'\r\n})(DialogsForm)\r\n\r\nconst DialogItem = (props) => {\r\n    const UserMessage = (e) => {\r\n        props.setState(true)\r\n    }\r\n\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        // <Route path='/news' render={() => <NewsContainer/>}/>\r\n        <NavLink to={path} className={s.dialog} activeClassName={s.active}>{props.name}</NavLink>\r\n\r\n    )\r\n}\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className=\"message\">{props.message}</div>\r\n    )\r\n}\r\nconst Dialogs = (props) => {\r\n    console.log()\r\n    let id = props.match.params.id\r\n    console.log(id)\r\n    let [state, setState] = useState(false)\r\n    let addSubmit = (value) => {\r\n\r\n        props.addMessageActionCreator(value.post_text)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            {id ? <div>\r\n                    <ReduxDialogsForm onSubmit={addSubmit}/>\r\n                    <div>\r\n                        {props.message.map((el, i) => {\r\n                            // if (id == el.id) {\r\n                            //     return\r\n                            // }\r\n                          return  <Message message={el.message}/>\r\n                        } )}\r\n                    </div>\r\n                </div> :\r\n                <div className={s.dialogsItem}>\r\n                    {props.dialogs.map((el, i) =>\r\n                        <DialogItem setState={setState} name={el.name} id={el.id}/>\r\n                    )}\r\n                </div>\r\n\r\n\r\n            }\r\n            {/*<button >ggg</button>*/}\r\n\r\n\r\n        </div>)\r\n}\r\n\r\n\r\nexport default Dialogs\r\n"]},"metadata":{},"sourceType":"module"}