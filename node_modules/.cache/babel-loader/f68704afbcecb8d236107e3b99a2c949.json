{"ast":null,"code":"let updateNewTextPost = 'updateNewTextPost';\nlet addpost = 'ADD-POST';\nlet store = {\n  _state: {\n    profilePage: {\n      postInfo: [{\n        id: 1,\n        massage: 'post1',\n        like: 12\n      }, {\n        id: 2,\n        massage: 'post2',\n        like: 20\n      }, {\n        id: 3,\n        massage: 'post3',\n        like: 1\n      }],\n      newPostText: 'it-kamasutra'\n    },\n    messagePage: {\n      messagesList: [{\n        id: 1,\n        message: 'Hi'\n      }, {\n        id: 2,\n        message: 'How are you?'\n      }, {\n        id: 3,\n        message: 'How is yore it?'\n      }, {\n        id: 4,\n        message: 'yo!!!!'\n      }],\n      names: [{\n        name: 'Dimych',\n        id: '1'\n      }, {\n        name: 'Kate',\n        id: '2'\n      }, {\n        name: 'Ann',\n        id: '3'\n      }, {\n        name: 'Sveta',\n        id: '4'\n      }, {\n        name: 'Andru',\n        id: '5'\n      }],\n      textMessage: 'lalala'\n    },\n    navLink: [{\n      link: 'Profile',\n      path: '/profile'\n    }, {\n      link: 'Massage',\n      path: '/dialogs'\n    }, {\n      link: 'News'\n    }, {\n      link: 'Music'\n    }, {\n      link: 'Settings'\n    }]\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  subscribe(observer) {\n    this._renderEntireTree = observer;\n  },\n\n  _renderEntireTree() {},\n\n  dispatch(action) {\n    if (action.type === addpost) {\n      let newPost = {\n        id: action.id,\n        massage: this._state.profilePage.newPostText,\n        like: 0\n      };\n\n      this._state.profilePage.postInfo.push(newPost);\n\n      this._state.profilePage.newPostText = '';\n\n      this._renderEntireTree(this._state);\n    } else if (action.type === updateNewTextPost) {\n      this._state.profilePage.newPostText = action.nextText;\n\n      this._renderEntireTree(this._state);\n    } else if (action.type === addMessage) {\n      let newMessage = {\n        id: action.id,\n        message: this._state.messagePage.textMessage\n      };\n\n      this._state.messagePage.messagesList.push(newMessage);\n\n      this._state.messagePage.textMessage = '';\n\n      this._renderEntireTree(this._state);\n    } else if (action.type === updateNewMessagePost) {\n      debugger;\n      this._state.messagePage.textMessage = action.nextMessage;\n\n      this._renderEntireTree(this._state);\n    }\n  }\n\n};\nexport const addPostActionCreator = id => {\n  return {\n    type: addpost,\n    id: id\n  };\n};\nexport const addMessageActionCreator = id => {\n  return {\n    type: addMessage,\n    id: id\n  };\n};\nexport const UpdateNewPostActionCreator = text => {\n  return {\n    type: updateNewTextPost,\n    nextText: text\n  };\n};\nexport const UpdateMessagePostActionCreator = (text, id) => {\n  return {\n    type: updateNewMessagePost,\n    nextMessage: text\n  };\n};\nexport default store;\nwindow.store = store;","map":{"version":3,"sources":["C:/Users/Katerina/PhpstormProjects/react-practice/src/redux/state.js"],"names":["updateNewTextPost","addpost","store","_state","profilePage","postInfo","id","massage","like","newPostText","messagePage","messagesList","message","names","name","textMessage","navLink","link","path","getState","subscribe","observer","_renderEntireTree","dispatch","action","type","newPost","push","nextText","addMessage","newMessage","updateNewMessagePost","nextMessage","addPostActionCreator","addMessageActionCreator","UpdateNewPostActionCreator","text","UpdateMessagePostActionCreator","window"],"mappings":"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","sourcesContent":["let updateNewTextPost = 'updateNewTextPost';\r\nlet addpost = 'ADD-POST';\r\n\r\nlet store = {\r\n\r\n    _state: {\r\n        profilePage: {\r\n            postInfo: [\r\n                {\r\n                    id: 1,\r\n                    massage: 'post1',\r\n                    like: 12\r\n                },\r\n                {\r\n                    id: 2,\r\n                    massage: 'post2',\r\n                    like: 20\r\n                },\r\n                {\r\n                    id: 3,\r\n                    massage: 'post3',\r\n                    like: 1\r\n                },\r\n            ],\r\n            newPostText: 'it-kamasutra'\r\n\r\n        },\r\n        messagePage: {\r\n            messagesList: [\r\n                {\r\n                    id: 1,\r\n                    message: 'Hi'\r\n                },\r\n                {\r\n                    id: 2,\r\n                    message: 'How are you?'\r\n                },\r\n                {\r\n                    id: 3,\r\n                    message: 'How is yore it?'\r\n                },\r\n                {\r\n                    id: 4,\r\n                    message: 'yo!!!!'\r\n                }\r\n            ],\r\n            names: [\r\n                {\r\n                    name: 'Dimych',\r\n                    id: '1'\r\n                }, {\r\n                    name: 'Kate',\r\n                    id: '2'\r\n                }, {\r\n                    name: 'Ann',\r\n                    id: '3'\r\n                }, {\r\n                    name: 'Sveta',\r\n                    id: '4'\r\n                }, {\r\n                    name: 'Andru',\r\n                    id: '5'\r\n                },\r\n            ],\r\n            textMessage: 'lalala'\r\n        },\r\n        navLink: [\r\n            {\r\n                link: 'Profile',\r\n                path: '/profile'\r\n            },\r\n            {\r\n                link: 'Massage',\r\n                path: '/dialogs'\r\n            },\r\n            {\r\n                link: 'News',\r\n\r\n            },\r\n            {\r\n                link: 'Music',\r\n\r\n            },\r\n            {\r\n                link: 'Settings',\r\n\r\n            }\r\n        ],\r\n    },\r\n    getState() {\r\n\r\n        return this._state\r\n    },\r\n    subscribe(observer) {\r\n\r\n        this._renderEntireTree = observer\r\n    },\r\n\r\n    _renderEntireTree() {\r\n    },\r\n\r\n    dispatch(action) {\r\n\r\n        if (action.type === addpost) {\r\n\r\n            let newPost = {\r\n                id:action.id,\r\n                massage: this._state.profilePage.newPostText,\r\n                like: 0\r\n            };\r\n            this._state.profilePage.postInfo.push(newPost);\r\n            this._state.profilePage.newPostText = '';\r\n            this._renderEntireTree(this._state);\r\n        } else if (action.type === updateNewTextPost) {\r\n\r\n            this._state.profilePage.newPostText = action.nextText;\r\n            this._renderEntireTree(this._state)\r\n        } else if (action.type === addMessage) {\r\n\r\n            let newMessage = {\r\n                id: action.id,\r\n                message: this._state.messagePage.textMessage\r\n\r\n            };\r\n            this._state.messagePage.messagesList.push(newMessage);\r\n            this._state.messagePage.textMessage = '';\r\n            this._renderEntireTree(this._state);\r\n        } else if (action.type === updateNewMessagePost) {\r\n            debugger\r\n            this._state.messagePage.textMessage = action.nextMessage;\r\n            this._renderEntireTree(this._state)\r\n        }\r\n\r\n    }\r\n}\r\nexport const addPostActionCreator = (id) => {\r\n\r\n    return {\r\n        type: addpost,\r\n        id: id\r\n    }\r\n};\r\nexport const addMessageActionCreator = (id) => {\r\n\r\n    return {\r\n        type: addMessage,\r\n\r\n        id: id\r\n    }\r\n};\r\nexport const UpdateNewPostActionCreator = (text) => {\r\n\r\n    return {\r\n        type: updateNewTextPost,\r\n        nextText: text\r\n    }\r\n};\r\nexport const UpdateMessagePostActionCreator = (text,id) => {\r\n\r\n    return {\r\n        type: updateNewMessagePost,\r\n        nextMessage: text\r\n    }\r\n};\r\n\r\n\r\nexport default store\r\nwindow.store = store"]},"metadata":{},"sourceType":"module"}