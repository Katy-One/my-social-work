{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Katerina\\\\PhpstormProjects\\\\react-practice\\\\src\\\\components\\\\Login\\\\Login.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from 'redux-form';\nimport style from '../common/FormControls/FormControls.module.css';\nimport { CreateInput, Input } from \"../common/FormControls/FormControls\";\nimport { maxLength10, required } from \"../../utils/validator/validator\";\nimport { login } from \"../../redux/auth-reducer\";\n\nconst LoginForm = ({\n  handleSubmit,\n  error\n}) => {\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, CreateInput('Email', 'email', required, Input)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Field, {\n    validate: [required],\n    placeholder: 'passwоrd',\n    type: 'password',\n    name: 'password',\n    component: Input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })), error && React.createElement(\"div\", {\n    className: style.formSummeryError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, error), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Field, {\n    type: 'checkbox',\n    name: 'rememberMe',\n    component: Input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Login\"));\n};\n\nconst ReduxLoginForm = reduxForm({\n  // a unique name for the form\n  form: 'login'\n})(LoginForm);\n\nlet Login = props => {\n  let loginSubmit = formData => {\n    props.login(formData.email, formData.password, formData.rememberMe);\n    console.log(formData);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Login\"), React.createElement(ReduxLoginForm, {\n    onSubmit: loginSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })));\n}; // You have to connect() to any reducers that you wish to connect to yourself\n\n\nlet mapStateToProps = state => ({\n  isAuth: state.auth.isAuth\n});\n\nexport default connect(null, {\n  login\n})(Login);","map":{"version":3,"sources":["C:/Users/Katerina/PhpstormProjects/react-practice/src/components/Login/Login.js"],"names":["React","connect","Field","reduxForm","style","CreateInput","Input","maxLength10","required","login","LoginForm","handleSubmit","error","formSummeryError","ReduxLoginForm","form","Login","props","loginSubmit","formData","email","password","rememberMe","console","log","mapStateToProps","state","isAuth","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,KAAR,EAAeC,SAAf,QAA+B,YAA/B;AACA,OAAOC,KAAP,MAAkB,gDAAlB;AACA,SAAQC,WAAR,EAAqBC,KAArB,QAAiC,qCAAjC;AACA,SAAQC,WAAR,EAAqBC,QAArB,QAAoC,iCAApC;AACA,SAAQC,KAAR,QAAoB,0BAApB;;AAGA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,YAAD;AAAgBC,EAAAA;AAAhB,CAAD,KAA4B;AAE1C,SAEI;AAAM,IAAA,QAAQ,EAAED,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,WAAW,CAAC,OAAD,EAAU,OAAV,EAAmBG,QAAnB,EAA8BF,KAA9B,CADhB,CAHJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAE,KAAF;AAAQ,IAAA,QAAQ,EAAE,CAACE,QAAD,CAAlB;AAA8B,IAAA,WAAW,EAAE,UAA3C;AAAuD,IAAA,IAAI,EAAE,UAA7D;AAAyE,IAAA,IAAI,EAAE,UAA/E;AAA2F,IAAA,SAAS,EAAEF,KAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAPJ,EAWQM,KAAK,IAAI;AAAK,IAAA,SAAS,EAAER,KAAK,CAACS,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCD,KAAzC,CAXjB,EAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAS,IAAA,IAAI,EAAE,UAAf;AAA2B,IAAA,IAAI,EAAE,YAAjC;AAA+C,IAAA,SAAS,EAAEN,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAbJ,EAkBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAlBJ,CAFJ;AAwBH,CA1BD;;AA6BA,MAAMQ,cAAc,GAAGX,SAAS,CAAC;AAC7B;AACAY,EAAAA,IAAI,EAAE;AAFuB,CAAD,CAAT,CAIpBL,SAJoB,CAAvB;;AAMA,IAAIM,KAAK,GAAIC,KAAD,IAAW;AAEnB,MAAIC,WAAW,GAAIC,QAAD,IAAc;AAE5BF,IAAAA,KAAK,CAACR,KAAN,CAAYU,QAAQ,CAACC,KAArB,EAA4BD,QAAQ,CAACE,QAArC,EAA+CF,QAAQ,CAACG,UAAxD;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AAEH,GALD;;AAOA,SAAM,0CACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADH,EAEG,oBAAC,cAAD;AAAgB,IAAA,QAAQ,EAAED,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,CADC,CAAN;AAQH,CAjBD,C,CAoBA;;;AACA,IAAIO,eAAe,GAAIC,KAAD,KAAY;AAE9BC,EAAAA,MAAM,EAAED,KAAK,CAACE,IAAN,CAAWD;AAFW,CAAZ,CAAtB;;AAIA,eAAe1B,OAAO,CAAC,IAAD,EAAO;AAACQ,EAAAA;AAAD,CAAP,CAAP,CAAuBO,KAAvB,CAAf","sourcesContent":["import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport style from '../common/FormControls/FormControls.module.css'\r\nimport {CreateInput, Input} from \"../common/FormControls/FormControls\";\r\nimport {maxLength10, required} from \"../../utils/validator/validator\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\n\r\n\r\nconst LoginForm = ({handleSubmit , error}) => {\r\n\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n\r\n\r\n            <div>\r\n                {CreateInput('Email', 'email', required , Input)}\r\n               \r\n            </div>\r\n            <div>\r\n                < Field validate={[required]} placeholder={'passwоrd'} type={'password'} name={'password'} component={Input}/>\r\n            </div>\r\n            {\r\n                error && <div className={style.formSummeryError}>{error}</div>\r\n            }\r\n            <div>\r\n                <Field   type={'checkbox'} name={'rememberMe'} component={Input}/>\r\n            </div>\r\n\r\n\r\n            <button>Login</button>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst ReduxLoginForm = reduxForm({\r\n    // a unique name for the form\r\n    form: 'login',\r\n\r\n})(LoginForm)\r\n\r\nlet Login = (props) => {\r\n\r\n    let loginSubmit = (formData) => {\r\n\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n        console.log(formData)\r\n\r\n    }\r\n\r\n    return<>\r\n         <div>\r\n            <h1>Login</h1>\r\n            <ReduxLoginForm onSubmit={loginSubmit}/>\r\n        </div>\r\n    </>\r\n\r\n\r\n}\r\n\r\n\r\n// You have to connect() to any reducers that you wish to connect to yourself\r\nlet mapStateToProps = (state) => ({\r\n\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(null, {login})(Login)"]},"metadata":{},"sourceType":"module"}