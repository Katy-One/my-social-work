{"ast":null,"code":"import React from'react';import s from'./Dialogs.module.css';import{NavLink,Redirect}from\"react-router-dom\";import{addMessageActionCreator,UpdateMessagePostActionCreator}from\"../../redux/message-reducer\";import{Field,reduxForm}from'redux-form';import{TextArea}from\"../common/FormControls/FormControls\";import{maxLength10,required}from\"../../utils/validator/validator\";var DialogsForm=function DialogsForm(props){var handleSubmit=props.handleSubmit,load=props.load,pristine=props.pristine,reset=props.reset,submitting=props.submitting;return React.createElement(\"form\",{onSubmit:props.handleSubmit},React.createElement(\"div\",null,React.createElement(Field,{placeholder:'post text',name:'post_text',component:TextArea,validate:[required,maxLength10]})),React.createElement(\"button\",{disabled:props.pristine||props.submitting},\"Add post\"));};var ReduxDialogsForm=reduxForm({// a unique name for the form\nform:'login'})(DialogsForm);var DialogItem=function DialogItem(props){console.log(props);var path='/dialogs/'+props.id;return React.createElement(NavLink,{to:path,className:s.dialog,activeClassName:s.active},props.name);};var Message=function Message(props){return React.createElement(\"div\",{className:\"message\"},props.message);};var Dialogs=function Dialogs(props){console.log(props);//let newMessageElement = React.createRef()\n// const addMessage = () => {\n//     props.addMessageActionCreator()\n// }\n// let onMessageChange = () => {\n//\n//     //let text = newMessageElement.current.value;\n//     console.log(text)\n//     props.UpdateMessagePostActionCreator(text)\n// }\nvar addSubmit=function addSubmit(value){props.addMessageActionCreator(value.post_text);};return React.createElement(\"div\",{className:s.dialogs},React.createElement(\"div\",{className:s.dialogsItem},props.dialogs.map(function(el,i){return React.createElement(DialogItem,{name:el.name,id:el.id});})),React.createElement(\"div\",null,props.message.map(function(el,i){return React.createElement(Message,{message:el.message});})),React.createElement(ReduxDialogsForm,{onSubmit:addSubmit}));};export default Dialogs;","map":{"version":3,"sources":["C:/Users/Katerina/PhpstormProjects/react-practice/src/components/Dialogs/Dialogs.js"],"names":["React","s","NavLink","Redirect","addMessageActionCreator","UpdateMessagePostActionCreator","Field","reduxForm","TextArea","maxLength10","required","DialogsForm","props","handleSubmit","load","pristine","reset","submitting","ReduxDialogsForm","form","DialogItem","console","log","path","id","dialog","active","name","Message","message","Dialogs","addSubmit","value","post_text","dialogs","dialogsItem","map","el","i"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {addMessageActionCreator, UpdateMessagePostActionCreator} from \"../../redux/message-reducer\";\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {TextArea} from \"../common/FormControls/FormControls\";\r\nimport {maxLength10, required} from \"../../utils/validator/validator\";\r\n\r\n\r\n\r\nconst DialogsForm = (props) => {\r\n    const { handleSubmit, load, pristine, reset, submitting } = props\r\n    return (\r\n\r\n        <form onSubmit={props.handleSubmit}>\r\n\r\n\r\n            <div>\r\n                <Field placeholder={'post text'} name={'post_text'} component={TextArea}  validate={[required, maxLength10]} />\r\n            </div>\r\n\r\n\r\n            <button   disabled={props.pristine || props.submitting} >Add post</button>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst ReduxDialogsForm = reduxForm({\r\n    // a unique name for the form\r\n    form: 'login'\r\n})(DialogsForm)\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    console.log(props)\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <NavLink to={path} className={s.dialog} activeClassName={s.active}>{props.name}</NavLink>\r\n    )\r\n}\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className=\"message\">{props.message}</div>\r\n    )\r\n}\r\nconst Dialogs = (props) => {\r\n    console.log(props)\r\n    //let newMessageElement = React.createRef()\r\n    // const addMessage = () => {\r\n    //     props.addMessageActionCreator()\r\n    // }\r\n    // let onMessageChange = () => {\r\n    //\r\n    //     //let text = newMessageElement.current.value;\r\n    //     console.log(text)\r\n    //     props.UpdateMessagePostActionCreator(text)\r\n    // }\r\nlet addSubmit=(value)=>{\r\n\r\n    props.addMessageActionCreator(value.post_text)\r\n}\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItem}>\r\n                {props.dialogs.map((el, i) =>\r\n                    <DialogItem name={el.name} id={el.id}/>\r\n                )}\r\n            </div>\r\n            <div>\r\n                {props.message.map((el, i) =>\r\n                    <Message message={el.message}/>\r\n                )}\r\n            </div>\r\n            <ReduxDialogsForm onSubmit={addSubmit}/>\r\n            {/*<div>*/}\r\n            {/*    <textarea onChange={onMessageChange} ref={newMessageElement} value={props.textMessage}/>*/}\r\n            {/*    <button onClick={addMessage}>Add Message</button>*/}\r\n            {/*</div>*/}\r\n        </div>)\r\n}\r\n\r\n\r\nexport default Dialogs\r\n"]},"metadata":{},"sourceType":"module"}