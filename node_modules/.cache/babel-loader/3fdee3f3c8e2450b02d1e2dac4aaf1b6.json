{"ast":null,"code":"let updateNewTextPost = 'updateNewTextPost';\nlet addpost = 'ADD-POST';\nlet SET_USER_PROFILE = 'SET_USER_PROFILE';\nlet initialState = {\n  postInfo: [{\n    id: 1,\n    massage: 'post1',\n    like: 12\n  }, {\n    id: 2,\n    massage: 'post2',\n    like: 20\n  }, {\n    id: 3,\n    massage: 'post3',\n    like: 1\n  }],\n  newPostText: 'it-kamasutra',\n  profile: null\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case addpost:\n      let newPost = {\n        id: action.id,\n        massage: state.newPostText,\n        like: 0\n      };\n      debugger;\n      return { ...state,\n        postInfo: [...state.postInfo, newPost],\n        newPostText: ''\n      };\n\n    case updateNewTextPost:\n      return { ...state,\n        newPostText: action.nextText\n      };\n\n    case SET_USER_PROFILE:\n      return { ...state,\n        profile: action.profile\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostActionCreator = id => {\n  return {\n    type: addpost,\n    id: id\n  };\n};\nexport const UpdateNewPostActionCreator = text => {\n  return {\n    type: updateNewTextPost,\n    nextText: text\n  };\n};\n\nconst setUsersProfile = () => ({\n  type: SET_USER_PROFILE,\n  profile\n});\n\nexport default profileReducer;","map":{"version":3,"sources":["C:/Users/Katerina/PhpstormProjects/react-practice/src/redux/profile-reducer.js"],"names":["updateNewTextPost","addpost","SET_USER_PROFILE","initialState","postInfo","id","massage","like","newPostText","profile","profileReducer","state","action","type","newPost","nextText","addPostActionCreator","UpdateNewPostActionCreator","text","setUsersProfile"],"mappings":"AAAA,IAAIA,iBAAiB,GAAG,mBAAxB;AACA,IAAIC,OAAO,GAAG,UAAd;AACA,IAAIC,gBAAgB,GAAG,kBAAvB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,QAAQ,EAAE,CACN;AACIC,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,OAAO,EAAE,OAFb;AAGIC,IAAAA,IAAI,EAAE;AAHV,GADM,EAMN;AACIF,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,OAAO,EAAE,OAFb;AAGIC,IAAAA,IAAI,EAAE;AAHV,GANM,EAWN;AACIF,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,OAAO,EAAE,OAFb;AAGIC,IAAAA,IAAI,EAAE;AAHV,GAXM,CADK;AAkBfC,EAAAA,WAAW,EAAE,cAlBE;AAmBfC,EAAAA,OAAO,EAAC;AAnBO,CAAnB;;AAsBA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAErD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKZ,OAAL;AACI,UAAIa,OAAO,GAAG;AACVT,QAAAA,EAAE,EAAEO,MAAM,CAACP,EADD;AAEVC,QAAAA,OAAO,EAAEK,KAAK,CAACH,WAFL;AAGVD,QAAAA,IAAI,EAAE;AAHI,OAAd;AAKA;AACA,aAAO,EACH,GAAGI,KADA;AAEHP,QAAAA,QAAQ,EAAE,CAAC,GAAGO,KAAK,CAACP,QAAV,EAAoBU,OAApB,CAFP;AAGHN,QAAAA,WAAW,EAAE;AAHV,OAAP;;AAKJ,SAAKR,iBAAL;AACI,aAAO,EACH,GAAGW,KADA;AAEHH,QAAAA,WAAW,EAAEI,MAAM,CAACG;AAFjB,OAAP;;AAIJ,SAAKb,gBAAL;AACI,aAAM,EACF,GAAGS,KADD;AAEFF,QAAAA,OAAO,EAAEG,MAAM,CAACH;AAFd,OAAN;;AAIJ;AACI,aAAOE,KAAP;AAxBR;AA0BH,CA5BD;;AA6BA,OAAO,MAAMK,oBAAoB,GAAIX,EAAD,IAAQ;AAExC,SAAO;AACHQ,IAAAA,IAAI,EAAEZ,OADH;AAEHI,IAAAA,EAAE,EAAEA;AAFD,GAAP;AAIH,CANM;AAQP,OAAO,MAAMY,0BAA0B,GAAIC,IAAD,IAAU;AAEhD,SAAO;AACHL,IAAAA,IAAI,EAAEb,iBADH;AAEHe,IAAAA,QAAQ,EAAEG;AAFP,GAAP;AAIH,CANM;;AAOP,MAAMC,eAAe,GAAG,OAAO;AAACN,EAAAA,IAAI,EAAEX,gBAAP;AAAyBO,EAAAA;AAAzB,CAAP,CAAxB;;AACA,eAAeC,cAAf","sourcesContent":["let updateNewTextPost = 'updateNewTextPost';\r\nlet addpost = 'ADD-POST';\r\nlet SET_USER_PROFILE = 'SET_USER_PROFILE'\r\n\r\nlet initialState = {\r\n    postInfo: [\r\n        {\r\n            id: 1,\r\n            massage: 'post1',\r\n            like: 12\r\n        },\r\n        {\r\n            id: 2,\r\n            massage: 'post2',\r\n            like: 20\r\n        },\r\n        {\r\n            id: 3,\r\n            massage: 'post3',\r\n            like: 1\r\n        },\r\n    ],\r\n    newPostText: 'it-kamasutra',\r\n    profile:null\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case addpost:\r\n            let newPost = {\r\n                id: action.id,\r\n                massage: state.newPostText,\r\n                like: 0\r\n            };\r\n            debugger\r\n            return {\r\n                ...state,\r\n                postInfo: [...state.postInfo, newPost],\r\n                newPostText: ''\r\n            }\r\n        case updateNewTextPost:\r\n            return {\r\n                ...state,\r\n                newPostText: action.nextText\r\n            }\r\n        case SET_USER_PROFILE:\r\n            return{\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        default :\r\n            return state\r\n    }\r\n}\r\nexport const addPostActionCreator = (id) => {\r\n\r\n    return {\r\n        type: addpost,\r\n        id: id\r\n    }\r\n};\r\n\r\nexport const UpdateNewPostActionCreator = (text) => {\r\n\r\n    return {\r\n        type: updateNewTextPost,\r\n        nextText: text\r\n    }\r\n};\r\nconst setUsersProfile = () => ({type: SET_USER_PROFILE, profile})\r\nexport default profileReducer"]},"metadata":{},"sourceType":"module"}